{"version":3,"sources":["../soaper-dl.ts","../node_modules/cheerio/src/options.ts","../node_modules/cheerio/src/static.ts","../node_modules/cheerio/src/api/attributes.ts","../node_modules/cheerio/src/utils.ts","../node_modules/cheerio/src/api/traversing.ts","../node_modules/cheerio/src/api/manipulation.ts","../node_modules/cheerio/src/parse.ts","../node_modules/cheerio/src/api/css.ts","../node_modules/cheerio/src/api/forms.ts","../node_modules/cheerio/src/api/extract.ts","../node_modules/cheerio/src/cheerio.ts","../node_modules/cheerio/src/load.ts","../node_modules/cheerio/src/parsers/parse5-adapter.ts","../node_modules/cheerio/src/load-parse.ts","../node_modules/cheerio/src/index.ts"],"sourcesContent":["#!/usr/bin/env node\n\n// import fs from 'node:fs'\n// import os from 'node:os'\nimport url from 'node:url'\nimport path from 'node:path'\nimport { spawnSync } from 'node:child_process'\nimport * as cheerio from 'cheerio'\n\n\ntype DlLinks = {\n  m3u8Link: string;\n  subLink: string | null;\n}\n\nconst FILE_NAME = path.basename(url.fileURLToPath(import.meta.url))\nconst SEARCH_TERM = process.argv.slice(2).join(' ')\nconst BASE_URI = 'https://soaper.tv'\nconst SUB_LANG = 'en'\nconst SUB_DL_PATH =  '/d/Videos'\n\nconsole.log('SEARCH_TERM:', SEARCH_TERM)\nif (SEARCH_TERM === '-h' || SEARCH_TERM === '--help') {\n  console.info(`Usage: ${FILE_NAME} <SEARCH TERM>`)\n  process.exit(0)\n}\n\nif (!SEARCH_TERM) {\n  // TODO: fetch new release list to fzf\n  console.info('[soaper-dl] Nothing found, try another search term')\n  process.exit(0)\n}\n\nasync function search(): Promise<string> {\n  const searchUrl = `${BASE_URI}/search.html?keyword=`\n\n  const $ = await fetch(searchUrl + SEARCH_TERM)\n  .then(res => res.text())\n  .then(html => cheerio.load(html))\n\n  const results = $('div.thumbnail.text-center')\n  if (results.length === 0) {\n    console.info('[soaper-dl] Nothing found, try another search term')\n    process.exit(0)\n  }\n\n  const fzfLines: string[] = []\n  results.each((_i, el) => {\n    const year = $(el).find('.img-group > div').text()\n    const title = $(el).find('h5').text().replaceAll(' ', '_')\n    const href =  $(el).find('h5 > a').attr('href') as string\n    fzfLines.push(`[${year}] ${title} ${BASE_URI + href}`)\n  })\n\n  const fzf = spawnSync(`echo \"${fzfLines.join('\\n')}\" | fzf --header-first --header=\"Search Results\" --cycle --with-nth 1,2`, {\n    // stdout has to be pipe here to return results\n    stdio: ['inherit', 'pipe', 'inherit'],\n    shell: true,\n    encoding: 'utf-8'\n  })\n\n  return fzf.stdout.replace(/\\n$/, '')\n}\n\nasync function getDlLinks(pageLink: string, ajaxType: string): Promise<DlLinks> {\n  const pass: string = pageLink.match(/_(?<pass>.*)\\.html/)?.groups?.pass ?? ''\n  if (!pass) throw '[soaper-dl-error] Couldn\\'t get passkey'\n\n    const result = await fetch(`${BASE_URI}/home/index/${ajaxType}`, {\n      \"headers\": {\n        \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        \"Referer\": `${BASE_URI}${pageLink}`\n      },\n      \"body\": `pass=${pass}`,\n        \"method\": \"POST\"\n    }).then(r => r.json())\n\n    type Links = {\n      subs: null | Array<{name: string, path: string}>;\n      val: string;\n    }\n    const {subs, val: m3u8Link }: Links = result\n    if (m3u8Link === 'Cannot get video source.') throw '[soaper-dl-error] Cannot get video source.'\n      const subPath: {path: string, name: string } | undefined = subs?.find(sub => sub.name.includes(SUB_LANG))\n\n    return {\n      m3u8Link,\n      subLink: subPath?.path ? subPath.path : null\n    }\n}\n\nasync function runShell(command: string, std: 'pipe' | 'inherit' = 'inherit'): Promise<void> {\n  spawnSync(command, {\n    // stdout has to be pipe on some streams\n    stdio: ['inherit', std, 'inherit'],\n    shell: true,\n    encoding: 'utf-8'\n  })\n}\n\nfunction sanitizeName(name: string): string {\n  // illegal chars: / ? < > \\ : * | \" causes problems when in filename, also remove []'()\n  return name.replace(/[/\\\\*?<>|'\\[\\]\\(\\)]/g, '')\n}\n\nasync function startDownload(chosenLink: string): Promise<void> {\n\n  const [year, name, pageLink] = chosenLink.split(' ')\n  const isSeries = ( chosenLink.includes('/tv_')) //  chosenLink.includes('/episode') )\n  const ajaxType = isSeries ? 'GetEInfoAjax' : 'GetMInfoAjax'\n  if (!isSeries) {\n    const { m3u8Link, subLink }: DlLinks = await getDlLinks(pageLink, ajaxType)\n    const fileName = sanitizeName(`${name}_${year}`)\n    if (subLink) {\n      const subPath = `${SUB_DL_PATH}/${fileName}.en.srt`\n      console.info(`[soaper-dl] Downloading subtitles ${subPath}`)\n      runShell(`curl ${BASE_URI + subLink} -o ${subPath}`)\n    }\n\n    console.info(`[soaper-dl] Downloading ${SUB_DL_PATH}/${fileName}`)\n    runShell(`yt-dlp '${BASE_URI + m3u8Link}' -o ${fileName}.mp4`)\n  }\n\n  if (isSeries) {\n    function zeroPad(n: string): string { return Number(n) < 10 ? '0' + n : n }\n    // save series name for filename here\n    const seriesName = name.split('_').slice(0, -1).join('_') || ''\n    // get list of eps and links\n    const $ = await fetch(pageLink)\n      .then(res => res.text())\n      .then(html => cheerio.load(html))\n\n    const fzfEpList: string[] = []\n    // loop thru backwards, see webpage\n    // let seasonNum = 1\n    // let epNum = 1\n    // for (let i = seasons.length - 1; i >= 0; i--) {\n    //   const eps = $(seasons[i]).find('a')\n    //   for (let y = eps.length -1; y >= 0; y--) {\n    //     const el = eps[y]\n    //     const epName: string = $(el).text().replaceAll(' ', '_').split('.')[1] as string\n    //     fzfEpList.push(`[S${zeroPad(seasonNum)}E${zeroPad(epNum++)}] ${epName} ${BASE_URI + $(el).attr('href')}`)\n    //   }\n    //   seasonNum++\n    //     epNum = 1\n    // }\n\n    const seasons = $('.alert-info-ex')\n    for (let season of seasons) {\n      const seasonText = $(season).find('h4').text()\n      const seasonNum = (/Season(\\d){1,2}/.exec(seasonText)?.[1] || 'N/A') as string\n\n      const episodes = $(season).find('div > a')\n      for (let ep of episodes) {\n        const [epNum, epName] = $(ep).text().replaceAll(' ', '_').split('.') as string[]\n        fzfEpList.push(`[S${zeroPad(seasonNum) }E${zeroPad(epNum)}] ${epName} ${BASE_URI + $(ep).attr('href')}`)\n      }\n    }\n\n    const fzf = spawnSync(`echo \"${fzfEpList.join('\\n')}\" | fzf --header-first --header=\"Choose episodes to download with <TAB>\" --multi --cycle --with-nth 1,2,3`, {\n      // stdout has to be pipe here\n      stdio: ['inherit', 'pipe', 'inherit'],\n      shell: true,\n      encoding: 'utf-8'\n    })\n\n    // sort selected eps to dl oldest first\n    const selectedEpisodes = fzf.stdout.split('\\n').sort()\n    const commands: string[] = []\n    for (const ep of selectedEpisodes) {\n      if (!ep) continue\n      const [epNum, name, epPageLink] = ep.split(' ')\n      const fileName = sanitizeName(`${seriesName}_${epNum}_${name}`)\n      const { m3u8Link, subLink }: DlLinks = await getDlLinks(epPageLink, ajaxType)\n      if (subLink) {\n        const subPath = `${SUB_DL_PATH}/${fileName}.en.srt`\n        console.info(`[soaper-dl] Downloading subtitles ${subPath}`)\n        const commandCurl = `curl '${BASE_URI + subLink}' -o ${subPath}`\n        commands.push(commandCurl)\n        // runShell(commandCurl)\n      }\n      const commandYTDLP = `yt-dlp --quiet '${BASE_URI + m3u8Link}' -o ${fileName}.mp4`\n      console.info(`[soaper-dl] Downloading ${commandYTDLP.split(' ').at(-1)}`)\n      // running 'command' thru runShell func doesn't work for sequential ddownloads for some reason\n      // spawnSync(commandYTDLP, {\n      //   // stdout has to be inherit here\n      //   stdio: ['inherit', 'inherit', 'inherit'],\n      //   shell: true,\n      //   encoding: 'utf-8'\n      // })\n      commands.push(commandYTDLP)\n    }\n    for (const command of commands){\n      console.info(`[soaper-dl] Downloading ${command.split(' ').at(-1)}`)\n      // running 'command' thru runShell func doesn't work for sequential ddownloads for some reason\n      spawnSync(command, {\n        // stdout has to be inherit here\n        stdio: ['inherit', 'inherit', 'inherit'],\n        shell: true,\n        encoding: 'utf-8'\n      })\n    }\n  }\n}\n\nasync function main() {\n  const chosenLink: string = await search().catch(err => {\n    console.error('[soaper-dl-error] Search fetch failed')\n    console.error(err)\n    process.exit(1)\n  })\n  if (!chosenLink) process.exit(1)\n  await startDownload(chosenLink)\n}\n\nmain().catch(err => {\n  console.error(err)\n  process.exit(1)\n})\n\n","import type { DomHandlerOptions } from 'domhandler';\nimport type { ParserOptions as HTMLParser2ParserOptions } from 'htmlparser2';\nimport type { ParserOptions as Parse5ParserOptions } from 'parse5';\nimport type { Htmlparser2TreeAdapterMap } from 'parse5-htmlparser2-tree-adapter';\nimport type { Options as SelectOptions } from 'cheerio-select';\n\n/**\n * Options accepted by htmlparser2, the default parser for XML.\n *\n * @see https://github.com/fb55/htmlparser2/wiki/Parser-options\n */\nexport interface HTMLParser2Options\n  extends DomHandlerOptions,\n    HTMLParser2ParserOptions {}\n\n/**\n * Options accepted by Cheerio.\n *\n * Please note that parser-specific options are _only recognized_ if the\n * relevant parser is used.\n */\nexport interface CheerioOptions\n  extends Parse5ParserOptions<Htmlparser2TreeAdapterMap> {\n  /**\n   * Recommended way of configuring htmlparser2 when wanting to parse XML.\n   *\n   * This will switch Cheerio to use htmlparser2.\n   *\n   * @default false\n   */\n  xml?: HTMLParser2Options | boolean;\n\n  /**\n   * Enable xml mode, which will switch Cheerio to use htmlparser2.\n   *\n   * @deprecated Please use the `xml` option instead.\n   * @default false\n   */\n  xmlMode?: boolean;\n\n  /** The base URI for the document. Used to resolve the `href` and `src` props. */\n  baseURI?: string | URL;\n\n  /**\n   * Is the document in quirks mode?\n   *\n   * This will lead to `.className` and `#id` being case-insensitive.\n   *\n   * @default false\n   */\n  quirksMode?: SelectOptions['quirksMode'];\n  /**\n   * Extension point for pseudo-classes.\n   *\n   * Maps from names to either strings of functions.\n   *\n   * - A string value is a selector that the element must match to be selected.\n   * - A function is called with the element as its first argument, and optional\n   *   parameters second. If it returns true, the element is selected.\n   *\n   * @example\n   *\n   * ```js\n   * const $ = cheerio.load(\n   *   '<div class=\"foo\"></div><div data-bar=\"boo\"></div>',\n   *   {\n   *     pseudos: {\n   *       // `:foo` is an alias for `div.foo`\n   *       foo: 'div.foo',\n   *       // `:bar(val)` is equivalent to `[data-bar=val s]`\n   *       bar: (el, val) => el.attribs['data-bar'] === val,\n   *     },\n   *   },\n   * );\n   *\n   * $(':foo').length; // 1\n   * $('div:bar(boo)').length; // 1\n   * $('div:bar(baz)').length; // 0\n   * ```\n   */\n  pseudos?: SelectOptions['pseudos'];\n}\n\n/** Internal options for Cheerio. */\nexport interface InternalOptions\n  extends HTMLParser2Options,\n    Omit<CheerioOptions, 'xml'> {\n  /**\n   * Whether to use htmlparser2.\n   *\n   * This is set to true if `xml` is set to true.\n   */\n  _useHtmlParser2?: boolean;\n}\n\nconst defaultOpts: InternalOptions = {\n  _useHtmlParser2: false,\n};\n\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @param baseOptions - The base options to use.\n * @returns The flattened options.\n */\nexport function flattenOptions(\n  options?: CheerioOptions | null,\n  baseOptions?: InternalOptions,\n): InternalOptions {\n  if (!options) {\n    return baseOptions ?? defaultOpts;\n  }\n\n  const opts: InternalOptions = {\n    _useHtmlParser2: !!options.xmlMode,\n    ...baseOptions,\n    ...options,\n  };\n\n  if (options.xml) {\n    opts._useHtmlParser2 = true;\n    opts.xmlMode = true;\n\n    if (options.xml !== true) {\n      Object.assign(opts, options.xml);\n    }\n  } else if (options.xmlMode) {\n    opts._useHtmlParser2 = true;\n  }\n\n  return opts;\n}\n","import type { BasicAcceptedElems } from './types.js';\nimport type { CheerioAPI } from './load.js';\nimport type { Cheerio } from './cheerio.js';\nimport type { AnyNode, Document } from 'domhandler';\nimport { textContent } from 'domutils';\nimport {\n  type InternalOptions,\n  type CheerioOptions,\n  flattenOptions as flattenOptions,\n} from './options.js';\nimport type { ExtractedMap, ExtractMap } from './api/extract.js';\n\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(\n  that: CheerioAPI,\n  dom: BasicAcceptedElems<AnyNode> | undefined,\n  options: InternalOptions,\n): string {\n  if (!that) return '';\n\n  return that(dom ?? that._root.children, null, undefined, options).toString();\n}\n\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @param options - Options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(\n  dom?: BasicAcceptedElems<AnyNode> | CheerioOptions | null,\n  options?: CheerioOptions,\n): dom is CheerioOptions {\n  return (\n    !options &&\n    typeof dom === 'object' &&\n    dom != null &&\n    !('length' in dom) &&\n    !('type' in dom)\n  );\n}\n\n/**\n * Renders the document.\n *\n * @category Static\n * @param options - Options for the renderer.\n * @returns The rendered document.\n */\nexport function html(this: CheerioAPI, options?: CheerioOptions): string;\n/**\n * Renders the document.\n *\n * @category Static\n * @param dom - Element to render.\n * @param options - Options for the renderer.\n * @returns The rendered document.\n */\nexport function html(\n  this: CheerioAPI,\n  dom?: BasicAcceptedElems<AnyNode>,\n  options?: CheerioOptions,\n): string;\nexport function html(\n  this: CheerioAPI,\n  dom?: BasicAcceptedElems<AnyNode> | CheerioOptions,\n  options?: CheerioOptions,\n): string {\n  /*\n   * Be flexible about parameters, sometimes we call html(),\n   * with options as only parameter\n   * check dom argument for dom element specific properties\n   * assume there is no 'length' or 'type' properties in the options object\n   */\n  const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n\n  /*\n   * Sometimes `$.html()` is used without preloading html,\n   * so fallback non-existing options to the default ones.\n   */\n  const opts = {\n    ...this?._options,\n    ...flattenOptions(options),\n  };\n\n  return render(this, toRender, opts);\n}\n\n/**\n * Render the document as XML.\n *\n * @category Static\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(\n  this: CheerioAPI,\n  dom?: BasicAcceptedElems<AnyNode>,\n): string {\n  const options = { ...this._options, xmlMode: true };\n\n  return render(this, dom, options);\n}\n\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `<script>` and `<style>` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @category Static\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(\n  this: CheerioAPI | void,\n  elements?: ArrayLike<AnyNode>,\n): string {\n  const elems = elements ?? (this ? this.root() : []);\n\n  let ret = '';\n\n  for (let i = 0; i < elems.length; i++) {\n    ret += textContent(elems[i]);\n  }\n\n  return ret;\n}\n\n/**\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n *\n * @category Static\n * @param data - Markup that will be parsed.\n * @param context - Will be ignored. If it is a boolean it will be used as the\n *   value of `keepScripts`.\n * @param keepScripts - If false all scripts will be removed.\n * @returns The parsed DOM.\n * @alias Cheerio.parseHTML\n * @see {@link https://api.jquery.com/jQuery.parseHTML/}\n */\nexport function parseHTML(\n  this: CheerioAPI,\n  data: string,\n  context?: unknown | boolean,\n  keepScripts?: boolean,\n): AnyNode[];\nexport function parseHTML(this: CheerioAPI, data?: '' | null): null;\nexport function parseHTML(\n  this: CheerioAPI,\n  data?: string | null,\n  context?: unknown | boolean,\n  keepScripts = typeof context === 'boolean' ? context : false,\n): AnyNode[] | null {\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n\n  const parsed = this.load(data, this._options, false);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  /*\n   * The `children` array is used by Cheerio internally to group elements that\n   * share the same parents. When nodes created through `parseHTML` are\n   * inserted into previously-existing DOM structures, they will be removed\n   * from the `children` array. The results of `parseHTML` should remain\n   * constant across these operations, so a shallow copy should be returned.\n   */\n  return [...parsed.root()[0].children];\n}\n\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @category Static\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root(this: CheerioAPI): Cheerio<Document> {\n  return this(this._root);\n}\n\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @category Static\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container: AnyNode, contained: AnyNode): boolean {\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  /*\n   * Step up the descendants, stopping when the root element is reached\n   * (signaled by `.parent` returning a reference to the same object)\n   */\n  let next: AnyNode | null = contained;\n  while (next && next !== next.parent) {\n    next = next.parent;\n    if (next === container) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @category Static\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract<M extends ExtractMap>(\n  this: CheerioAPI,\n  map: M,\n): ExtractedMap<M> {\n  return this.root().extract(map);\n}\n\ntype Writable<T> = { -readonly [P in keyof T]: T[P] };\n\n/**\n * $.merge().\n *\n * @category Static\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge<T>(\n  arr1: Writable<ArrayLike<T>>,\n  arr2: ArrayLike<T>,\n): ArrayLike<T> | undefined {\n  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n    return;\n  }\n  let newLength = arr1.length;\n  const len = +arr2.length;\n\n  for (let i = 0; i < len; i++) {\n    arr1[newLength++] = arr2[i];\n  }\n  arr1.length = newLength;\n  return arr1;\n}\n\n/**\n * Checks if an object is array-like.\n *\n * @category Static\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item: unknown): item is ArrayLike<unknown> {\n  if (Array.isArray(item)) {\n    return true;\n  }\n\n  if (\n    typeof item !== 'object' ||\n    item === null ||\n    !('length' in item) ||\n    typeof item.length !== 'number' ||\n    item.length < 0\n  ) {\n    return false;\n  }\n\n  for (let i = 0; i < item.length; i++) {\n    if (!(i in item)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\n\nimport { text } from '../static.js';\nimport { domEach, camelCase, cssCase } from '../utils.js';\nimport { isTag, type AnyNode, type Element } from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n\n// Attributes that are booleans\nconst rboolean =\n  /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\n\n/**\n * Gets a node's attribute. For boolean attributes, it will return the value's\n * name should it be set.\n *\n * Also supports getting the `value` of several form elements.\n *\n * @private\n * @category Attributes\n * @param elem - Element to get the attribute of.\n * @param name - Name of the attribute.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The attribute's value.\n */\nfunction getAttr(\n  elem: AnyNode,\n  name: undefined,\n  xmlMode?: boolean,\n): Record<string, string> | undefined;\nfunction getAttr(\n  elem: AnyNode,\n  name: string,\n  xmlMode?: boolean,\n): string | undefined;\nfunction getAttr(\n  elem: AnyNode,\n  name: string | undefined,\n  xmlMode?: boolean,\n): Record<string, string> | string | undefined {\n  if (!elem || !isTag(elem)) return undefined;\n\n  elem.attribs ??= {};\n\n  // Return the entire attribs object if no attribute specified\n  if (!name) {\n    return elem.attribs;\n  }\n\n  if (hasOwn.call(elem.attribs, name)) {\n    // Get the (decoded) attribute\n    return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n  }\n\n  // Mimic the DOM and return text content as value for `option's`\n  if (elem.name === 'option' && name === 'value') {\n    return text(elem.children);\n  }\n\n  // Mimic DOM with default value for radios/checkboxes\n  if (\n    elem.name === 'input' &&\n    (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n    name === 'value'\n  ) {\n    return 'on';\n  }\n\n  return undefined;\n}\n\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is\n * `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el: Element, name: string, value: string | null) {\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = `${value}`;\n  }\n}\n\n/**\n * Method for getting attributes. Gets the attribute value for only the first\n * element in the matched set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('ul').attr('id');\n * //=> fruits\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The attribute's value.\n * @see {@link https://api.jquery.com/attr/}\n */\nexport function attr<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n): string | undefined;\n/**\n * Method for getting all attributes and their values of the first element in\n * the matched set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('ul').attr();\n * //=> { id: 'fruits' }\n * ```\n *\n * @returns The attribute's values.\n * @see {@link https://api.jquery.com/attr/}\n */\nexport function attr<T extends AnyNode>(\n  this: Cheerio<T>,\n): Record<string, string> | undefined;\n/**\n * Method for setting attributes. Sets the attribute value for only the first\n * element in the matched set. If you set an attribute's value to `null`, you\n * remove that attribute. You may also pass a `map` and `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple').attr('id', 'favorite').html();\n * //=> <li class=\"apple\" id=\"favorite\">Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @param value - The new value of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/attr/}\n */\nexport function attr<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n  value?:\n    | string\n    | null\n    | ((this: Element, i: number, attrib: string) => string | null),\n): Cheerio<T>;\n/**\n * Method for setting multiple attributes at once. Sets the attribute value for\n * only the first element in the matched set. If you set an attribute's value to\n * `null`, you remove that attribute.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple').attr({ id: 'favorite' }).html();\n * //=> <li class=\"apple\" id=\"favorite\">Apple</li>\n * ```\n *\n * @param values - Map of attribute names and values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/attr/}\n */\nexport function attr<T extends AnyNode>(\n  this: Cheerio<T>,\n  values: Record<string, string | null>,\n): Cheerio<T>;\nexport function attr<T extends AnyNode>(\n  this: Cheerio<T>,\n  name?: string | Record<string, string | null>,\n  value?:\n    | string\n    | null\n    | ((this: Element, i: number, attrib: string) => string | null),\n): string | Cheerio<T> | undefined | Record<string, string> {\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (typeof name !== 'string') {\n        {\n          throw new Error('Bad combination of arguments.');\n        }\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el)) setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n    return domEach(this, (el) => {\n      if (!isTag(el)) return;\n\n      if (typeof name === 'object') {\n        for (const objName of Object.keys(name)) {\n          const objValue = name[objName];\n          setAttr(el, objName, objValue);\n        }\n      } else {\n        setAttr(el, name as string, value as string);\n      }\n    });\n  }\n\n  return arguments.length > 1\n    ? this\n    : getAttr(this[0], name as string, this.options.xmlMode);\n}\n\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The prop's value.\n */\nfunction getProp(\n  el: Element,\n  name: string,\n  xmlMode?: boolean,\n): string | undefined | Element[keyof Element] {\n  return name in el\n    ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n      el[name]\n    : !xmlMode && rboolean.test(name)\n      ? getAttr(el, name, false) !== undefined\n      : getAttr(el, name, xmlMode);\n}\n\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n * @param xmlMode - Disable handling of special HTML attributes.\n */\nfunction setProp(el: Element, name: string, value: unknown, xmlMode?: boolean) {\n  if (name in el) {\n    // @ts-expect-error Overriding value\n    el[name] = value;\n  } else {\n    setAttr(\n      el,\n      name,\n      !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`,\n    );\n  }\n}\n\ninterface StyleProp {\n  length: number;\n  [key: string]: string | number;\n  [index: number]: string;\n}\n\n/**\n * Method for getting and setting properties. Gets the property value for only\n * the first element in the matched set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('input[type=\"checkbox\"]').prop('checked');\n * //=> false\n *\n * $('input[type=\"checkbox\"]').prop('checked', true).val();\n * //=> ok\n * ```\n *\n * @param name - Name of the property.\n * @returns If `value` is specified the instance itself, otherwise the prop's\n *   value.\n * @see {@link https://api.jquery.com/prop/}\n */\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: 'tagName' | 'nodeName',\n): string | undefined;\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: 'innerHTML' | 'outerHTML' | 'innerText' | 'textContent',\n): string | null;\n/**\n * Get a parsed CSS style object.\n *\n * @param name - Name of the property.\n * @returns The style object, or `undefined` if the element has no `style`\n *   attribute.\n */\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: 'style',\n): StyleProp | undefined;\n/**\n * Resolve `href` or `src` of supported elements. Requires the `baseURI` option\n * to be set, and a global `URL` object to be part of the environment.\n *\n * @example With `baseURI` set to `'https://example.com'`:\n *\n * ```js\n * $('<img src=\"image.png\">').prop('src');\n * //=> 'https://example.com/image.png'\n * ```\n *\n * @param name - Name of the property.\n * @returns The resolved URL, or `undefined` if the element is not supported.\n */\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: 'href' | 'src',\n): string | undefined;\n/**\n * Get a property of an element.\n *\n * @param name - Name of the property.\n * @returns The property's value.\n */\nexport function prop<T extends AnyNode, K extends keyof Element>(\n  this: Cheerio<T>,\n  name: K,\n): Element[K];\n/**\n * Set a property of an element.\n *\n * @param name - Name of the property.\n * @param value - Value to set the property to.\n * @returns The instance itself.\n */\nexport function prop<T extends AnyNode, K extends keyof Element>(\n  this: Cheerio<T>,\n  name: K,\n  value:\n    | Element[K]\n    | ((this: Element, i: number, prop: K) => Element[keyof Element]),\n): Cheerio<T>;\n/**\n * Set multiple properties of an element.\n *\n * @example\n *\n * ```js\n * $('input[type=\"checkbox\"]').prop({\n *   checked: true,\n *   disabled: false,\n * });\n * ```\n *\n * @param map - Object of properties to set.\n * @returns The instance itself.\n */\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  map: Record<string, string | Element[keyof Element] | boolean>,\n): Cheerio<T>;\n/**\n * Set a property of an element.\n *\n * @param name - Name of the property.\n * @param value - Value to set the property to.\n * @returns The instance itself.\n */\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n  value:\n    | string\n    | boolean\n    | null\n    | ((this: Element, i: number, prop: string) => string | boolean),\n): Cheerio<T>;\n/**\n * Get a property of an element.\n *\n * @param name - The property's name.\n * @returns The property's value.\n */\nexport function prop<T extends AnyNode>(this: Cheerio<T>, name: string): string;\nexport function prop<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string | Record<string, string | Element[keyof Element] | boolean>,\n  value?:\n    | ((\n        this: Element,\n        i: number,\n        prop: string | undefined,\n      ) => string | Element[keyof Element] | boolean)\n    | unknown,\n): Cheerio<T> | string | undefined | null | Element[keyof Element] | StyleProp {\n  if (typeof name === 'string' && value === undefined) {\n    const el = this[0];\n\n    if (!el || !isTag(el)) return undefined;\n\n    switch (name) {\n      case 'style': {\n        const property = this.css() as StyleProp;\n        const keys = Object.keys(property);\n        for (let i = 0; i < keys.length; i++) {\n          property[i] = keys[i];\n        }\n\n        property.length = keys.length;\n\n        return property;\n      }\n      case 'tagName':\n      case 'nodeName': {\n        return el.name.toUpperCase();\n      }\n\n      case 'href':\n      case 'src': {\n        const prop = el.attribs?.[name];\n\n        if (\n          typeof URL !== 'undefined' &&\n          ((name === 'href' && (el.tagName === 'a' || el.tagName === 'link')) ||\n            (name === 'src' &&\n              (el.tagName === 'img' ||\n                el.tagName === 'iframe' ||\n                el.tagName === 'audio' ||\n                el.tagName === 'video' ||\n                el.tagName === 'source'))) &&\n          prop !== undefined &&\n          this.options.baseURI\n        ) {\n          return new URL(prop, this.options.baseURI).href;\n        }\n\n        return prop;\n      }\n\n      case 'innerText': {\n        return innerText(el);\n      }\n\n      case 'textContent': {\n        return textContent(el);\n      }\n\n      case 'outerHTML': {\n        return this.clone().wrap('<container />').parent().html();\n      }\n\n      case 'innerHTML': {\n        return this.html();\n      }\n\n      default: {\n        return getProp(el, name, this.options.xmlMode);\n      }\n    }\n  }\n\n  if (typeof name === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (typeof name === 'object') {\n        throw new TypeError('Bad combination of arguments.');\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el)) {\n          setProp(\n            el,\n            name,\n            value.call(el, i, getProp(el, name, this.options.xmlMode)),\n            this.options.xmlMode,\n          );\n        }\n      });\n    }\n\n    return domEach(this, (el) => {\n      if (!isTag(el)) return;\n\n      if (typeof name === 'object') {\n        for (const key of Object.keys(name)) {\n          const val = name[key];\n          setProp(el, key, val, this.options.xmlMode);\n        }\n      } else {\n        setProp(el, name, value, this.options.xmlMode);\n      }\n    });\n  }\n\n  return undefined;\n}\n\n/**\n * An element with a data attribute.\n *\n * @private\n */\ninterface DataElement extends Element {\n  /** The data attribute. */\n  data?: Record<string, unknown>;\n}\n\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param elem - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(\n  elem: DataElement,\n  name: string | Record<string, unknown>,\n  value?: unknown,\n) {\n  elem.data ??= {};\n\n  if (typeof name === 'object') Object.assign(elem.data, name);\n  else if (typeof name === 'string' && value !== undefined) {\n    elem.data[name] = value;\n  }\n}\n\n/**\n * Read _all_ HTML5 `data-*` attributes from the equivalent HTML5 `data-*`\n * attribute, and cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @returns A map with all of the data attributes.\n */\nfunction readAllData(el: DataElement): unknown {\n  for (const domName of Object.keys(el.attribs)) {\n    if (!domName.startsWith(dataAttrPrefix)) {\n      continue;\n    }\n\n    const jsName = camelCase(domName.slice(dataAttrPrefix.length));\n\n    if (!hasOwn.call(el.data, jsName)) {\n      el.data![jsName] = parseDataValue(el.attribs[domName]);\n    }\n  }\n\n  return el.data;\n}\n\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value.\n */\nfunction readData(el: DataElement, name: string): unknown {\n  const domName = dataAttrPrefix + cssCase(name);\n  const data = el.data!;\n\n  if (hasOwn.call(data, name)) {\n    return data[name];\n  }\n\n  if (hasOwn.call(el.attribs, domName)) {\n    return (data[name] = parseDataValue(el.attribs[domName]));\n  }\n\n  return undefined;\n}\n\n/**\n * Coerce string data-* attributes to their corresponding JavaScript primitives.\n *\n * @private\n * @category Attributes\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseDataValue(value: string): unknown {\n  if (value === 'null') return null;\n  if (value === 'true') return true;\n  if (value === 'false') return false;\n  const num = Number(value);\n  if (value === String(num)) return num;\n  if (rbrace.test(value)) {\n    try {\n      return JSON.parse(value);\n    } catch {\n      /* Ignore */\n    }\n  }\n  return value;\n}\n\n/**\n * Method for getting data attributes, for only the first element in the matched\n * set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('<div data-apple-color=\"red\"></div>').data('apple-color');\n * //=> 'red'\n * ```\n *\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or `undefined` if the attribute does not\n *   exist.\n * @see {@link https://api.jquery.com/data/}\n */\nexport function data<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n): unknown | undefined;\n/**\n * Method for getting all of an element's data attributes, for only the first\n * element in the matched set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('<div data-apple-color=\"red\"></div>').data();\n * //=> { appleColor: 'red' }\n * ```\n *\n * @returns A map with all of the data attributes.\n * @see {@link https://api.jquery.com/data/}\n */\nexport function data<T extends AnyNode>(\n  this: Cheerio<T>,\n): Record<string, unknown>;\n/**\n * Method for setting data attributes, for only the first element in the matched\n * set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * const apple = $('.apple').data('kind', 'mac');\n *\n * apple.data('kind');\n * //=> 'mac'\n * ```\n *\n * @param name - Name of the data attribute.\n * @param value - The new value.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/data/}\n */\nexport function data<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n  value: unknown,\n): Cheerio<T>;\n/**\n * Method for setting multiple data attributes at once, for only the first\n * element in the matched set.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * const apple = $('.apple').data({ kind: 'mac' });\n *\n * apple.data('kind');\n * //=> 'mac'\n * ```\n *\n * @param values - Map of names to values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/data/}\n */\nexport function data<T extends AnyNode>(\n  this: Cheerio<T>,\n  values: Record<string, unknown>,\n): Cheerio<T>;\nexport function data<T extends AnyNode>(\n  this: Cheerio<T>,\n  name?: string | Record<string, unknown>,\n  value?: unknown,\n): unknown | Cheerio<T> | undefined | Record<string, unknown> {\n  const elem = this[0];\n\n  if (!elem || !isTag(elem)) return;\n\n  const dataEl: DataElement = elem;\n  dataEl.data ??= {};\n\n  // Return the entire data object if no data specified\n  if (name == null) {\n    return readAllData(dataEl);\n  }\n\n  // Set the value (with attr map support)\n  if (typeof name === 'object' || value !== undefined) {\n    domEach(this, (el) => {\n      if (isTag(el)) {\n        if (typeof name === 'object') setData(el, name);\n        else setData(el, name, value as unknown);\n      }\n    });\n    return this;\n  }\n\n  return readData(dataEl, name);\n}\n\n/**\n * Method for getting the value of input, select, and textarea. Note: Support\n * for `map`, and `function` has not been added yet.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('input[type=\"text\"]').val();\n * //=> input_text\n * ```\n *\n * @returns The value.\n * @see {@link https://api.jquery.com/val/}\n */\nexport function val<T extends AnyNode>(\n  this: Cheerio<T>,\n): string | undefined | string[];\n/**\n * Method for setting the value of input, select, and textarea. Note: Support\n * for `map`, and `function` has not been added yet.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('input[type=\"text\"]').val('test').html();\n * //=> <input type=\"text\" value=\"test\"/>\n * ```\n *\n * @param value - The new value.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/val/}\n */\nexport function val<T extends AnyNode>(\n  this: Cheerio<T>,\n  value: string | string[],\n): Cheerio<T>;\nexport function val<T extends AnyNode>(\n  this: Cheerio<T>,\n  value?: string | string[],\n): string | string[] | Cheerio<T> | undefined {\n  const querying = arguments.length === 0;\n  const element = this[0];\n\n  if (!element || !isTag(element)) return querying ? undefined : this;\n\n  switch (element.name) {\n    case 'textarea': {\n      return this.text(value as string);\n    }\n    case 'select': {\n      const option = this.find('option:selected');\n      if (!querying) {\n        if (this.attr('multiple') == null && typeof value === 'object') {\n          return this;\n        }\n\n        this.find('option').removeAttr('selected');\n\n        const values = typeof value === 'object' ? value : [value];\n        for (const val of values) {\n          this.find(`option[value=\"${val}\"]`).attr('selected', '');\n        }\n\n        return this;\n      }\n\n      return this.attr('multiple')\n        ? option.toArray().map((el) => text(el.children))\n        : option.attr('value');\n    }\n    case 'input':\n    case 'option': {\n      return querying\n        ? this.attr('value')\n        : this.attr('value', value as string);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem: Element, name: string) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name)) return;\n\n  delete elem.attribs[name];\n}\n\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names?: string): string[] {\n  return names ? names.trim().split(rspace) : [];\n}\n\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n): Cheerio<T> {\n  const attrNames = splitNames(name);\n\n  for (const attrName of attrNames) {\n    domEach(this, (elem) => {\n      if (isTag(elem)) removeAttribute(elem, attrName);\n    });\n  }\n\n  return this;\n}\n\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass<T extends AnyNode>(\n  this: Cheerio<T>,\n  className: string,\n): boolean {\n  return this.toArray().some((elem) => {\n    const clazz = isTag(elem) && elem.attribs['class'];\n    let idx = -1;\n\n    if (clazz && className.length > 0) {\n      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n        const end = idx + className.length;\n\n        if (\n          (idx === 0 || rspace.test(clazz[idx - 1])) &&\n          (end === clazz.length || rspace.test(clazz[end]))\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  });\n}\n\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass<T extends AnyNode, R extends ArrayLike<T>>(\n  this: R,\n  value?:\n    | string\n    | ((this: Element, i: number, className: string) => string | undefined),\n): R {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        const className = el.attribs['class'] || '';\n        addClass.call([el], value.call(el, i, className));\n      }\n    });\n  }\n\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n\n  const classNames = value.split(rspace);\n  const numElements = this.length;\n\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    // If selected element isn't a tag, move on\n    if (!isTag(el)) continue;\n\n    // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n    const className = getAttr(el, 'class', false);\n\n    if (className) {\n      let setClass = ` ${className} `;\n\n      // Check if class already exists\n      for (const cn of classNames) {\n        const appendClass = `${cn} `;\n        if (!setClass.includes(` ${appendClass}`)) setClass += appendClass;\n      }\n\n      setAttr(el, 'class', setClass.trim());\n    } else {\n      setAttr(el, 'class', classNames.join(' ').trim());\n    }\n  }\n\n  return this;\n}\n\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass<T extends AnyNode, R extends ArrayLike<T>>(\n  this: R,\n  name?:\n    | string\n    | ((this: Element, i: number, className: string) => string | undefined),\n): R {\n  // Handle if value is a function\n  if (typeof name === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n      }\n    });\n  }\n\n  const classes = splitNames(name);\n  const numClasses = classes.length;\n  const removeAll = arguments.length === 0;\n\n  return domEach(this, (el) => {\n    if (!isTag(el)) return;\n\n    if (removeAll) {\n      // Short circuit the remove all case as this is the nice one\n      el.attribs['class'] = '';\n    } else {\n      const elClasses = splitNames(el.attribs['class']);\n      let changed = false;\n\n      for (let j = 0; j < numClasses; j++) {\n        const index = elClasses.indexOf(classes[j]);\n\n        if (index >= 0) {\n          elClasses.splice(index, 1);\n          changed = true;\n\n          /*\n           * We have to do another pass to ensure that there are not duplicate\n           * classes listed\n           */\n          j--;\n        }\n      }\n      if (changed) {\n        el.attribs['class'] = elClasses.join(' ');\n      }\n    }\n  });\n}\n\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass<T extends AnyNode, R extends ArrayLike<T>>(\n  this: R,\n  value?:\n    | string\n    | ((\n        this: Element,\n        i: number,\n        className: string,\n        stateVal?: boolean,\n      ) => string),\n  stateVal?: boolean,\n): R {\n  // Support functions\n  if (typeof value === 'function') {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        toggleClass.call(\n          [el],\n          value.call(el, i, el.attribs['class'] || '', stateVal),\n          stateVal,\n        );\n      }\n    });\n  }\n\n  // Return if no value or not a string or function\n  if (!value || typeof value !== 'string') return this;\n\n  const classNames = value.split(rspace);\n  const numClasses = classNames.length;\n  const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n  const numElements = this.length;\n\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    // If selected element isn't a tag, move on\n    if (!isTag(el)) continue;\n\n    const elementClasses = splitNames(el.attribs['class']);\n\n    // Check if class already exists\n    for (let j = 0; j < numClasses; j++) {\n      // Check if the class name is currently defined\n      const index = elementClasses.indexOf(classNames[j]);\n\n      // Add if stateValue === true or we are toggling and there is no value\n      if (state >= 0 && index < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index >= 0) {\n        // Otherwise remove but only if the item exists\n        elementClasses.splice(index, 1);\n      }\n    }\n\n    el.attribs['class'] = elementClasses.join(' ');\n  }\n\n  return this;\n}\n","import type { AnyNode } from 'domhandler';\nimport type { Cheerio } from './cheerio.js';\n\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio<T>(maybeCheerio: any): maybeCheerio is Cheerio<T> {\n  return maybeCheerio.cheerio != null;\n}\n\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str: string): string {\n  return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str: string): string {\n  return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach<\n  T extends AnyNode,\n  Arr extends ArrayLike<T> = Cheerio<T>,\n>(array: Arr, fn: (elem: T, index: number) => void): Arr {\n  const len = array.length;\n  for (let i = 0; i < len; i++) fn(array[i], i);\n  return array;\n}\n\nconst enum CharacterCodes {\n  LowerA = 97,\n  LowerZ = 122,\n  UpperA = 65,\n  UpperZ = 90,\n  Exclamation = 33,\n}\n\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str: string): boolean {\n  const tagStart = str.indexOf('<');\n\n  if (tagStart < 0 || tagStart > str.length - 3) return false;\n\n  const tagChar = str.charCodeAt(tagStart + 1);\n\n  return (\n    ((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n      (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n      tagChar === CharacterCodes.Exclamation) &&\n    str.includes('>', tagStart + 2)\n  );\n}\n","/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nimport {\n  isTag,\n  type AnyNode,\n  type Element,\n  hasChildren,\n  isDocument,\n  type Document,\n} from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport {\n  getChildren,\n  getSiblings,\n  nextElementSibling,\n  prevElementSibling,\n  uniqueSort,\n} from 'domutils';\nimport type { FilterFunction, AcceptedFilters } from '../types.js';\nconst reSiblingSelector = /^\\s*[+~]/;\n\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find<T extends AnyNode>(\n  this: Cheerio<T>,\n  selectorOrHaystack?: string | Cheerio<Element> | Element,\n): Cheerio<Element> {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack)\n      ? selectorOrHaystack.toArray()\n      : [selectorOrHaystack];\n\n    const context = this.toArray();\n\n    return this._make(\n      haystack.filter((elem) => context.some((node) => contains(node, elem))),\n    );\n  }\n\n  return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector: string,\n  limit: number,\n): Cheerio<Element> {\n  const context = this.toArray();\n\n  const elems = reSiblingSelector.test(selector)\n    ? context\n    : this.children().toArray();\n\n  const options = {\n    context,\n    root: this._root?.[0],\n\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode,\n  };\n\n  return this._make(select.select(selector, elems, options, limit));\n}\n\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher<P>(\n  matchMap: (fn: (elem: AnyNode) => P, elems: Cheerio<AnyNode>) => Element[],\n) {\n  return function (\n    fn: (elem: AnyNode) => P,\n    ...postFns: ((elems: Element[]) => Element[])[]\n  ) {\n    return function <T extends AnyNode>(\n      this: Cheerio<T>,\n      selector?: AcceptedFilters<Element>,\n    ): Cheerio<Element> {\n      let matched: Element[] = matchMap(fn, this);\n\n      if (selector) {\n        matched = filterArray(\n          matched,\n          selector,\n          this.options.xmlMode,\n          this._root?.[0],\n        );\n      }\n\n      return this._make(\n        // Post processing is only necessary if there is more than one element.\n        this.length > 1 && matched.length > 1\n          ? postFns.reduce((elems, fn) => fn(elems), matched)\n          : matched,\n      );\n    };\n  };\n}\n\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn: (elem: AnyNode) => Element[], elems) => {\n  let ret: Element[] = [];\n\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value.length > 0) ret = ret.concat(value);\n  }\n\n  return ret;\n});\n\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher(\n  (fn: (elem: AnyNode) => Element | null, elems) => {\n    const ret: Element[] = [];\n\n    for (let i = 0; i < elems.length; i++) {\n      const value = fn(elems[i]);\n      if (value !== null) {\n        ret.push(value);\n      }\n    }\n    return ret;\n  },\n);\n\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(\n  nextElem: (elem: AnyNode) => Element | null,\n  ...postFns: ((elems: Element[]) => Element[])[]\n) {\n  // We use a variable here that is used from within the matcher.\n  let matches: ((el: Element, i: number) => boolean) | null = null;\n\n  const innerMatcher = _getMatcher(\n    (nextElem: (elem: AnyNode) => Element | null, elems) => {\n      const matched: Element[] = [];\n\n      domEach(elems, (elem) => {\n        for (let next; (next = nextElem(elem)); elem = next) {\n          // FIXME: `matched` might contain duplicates here and the index is too large.\n          if (matches?.(next, matched.length)) break;\n          matched.push(next);\n        }\n      });\n\n      return matched;\n    },\n  )(nextElem, ...postFns);\n\n  return function <T extends AnyNode>(\n    this: Cheerio<T>,\n    selector?: AcceptedFilters<Element> | null,\n    filterSelector?: AcceptedFilters<Element>,\n  ): Cheerio<Element> {\n    // Override `matches` variable with the new target.\n    matches =\n      typeof selector === 'string'\n        ? (elem: Element) => select.is(elem, selector, this.options)\n        : selector\n          ? getFilterFn(selector)\n          : null;\n\n    const ret = innerMatcher.call(this, filterSelector);\n\n    // Set `matches` to `null`, so we don't waste memory.\n    matches = null;\n\n    return ret;\n  };\n}\n\nfunction _removeDuplicates<T extends AnyNode>(elems: T[]): T[] {\n  return elems.length > 1 ? Array.from(new Set<T>(elems)) : elems;\n}\n\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher(\n  ({ parent }) => (parent && !isDocument(parent) ? (parent as Element) : null),\n  _removeDuplicates,\n);\n\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n      matched.push(elem.parent as Element);\n      elem = elem.parent;\n    }\n    return matched;\n  },\n  uniqueSort,\n  (elems) => elems.reverse(),\n);\n\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  ({ parent }) => (parent && !isDocument(parent) ? (parent as Element) : null),\n  uniqueSort,\n  (elems) => elems.reverse(),\n);\n\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n): Cheerio<AnyNode> {\n  const set: AnyNode[] = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: this._root?.[0],\n  };\n\n  const selectFn =\n    typeof selector === 'string'\n      ? (elem: Element) => select.is(elem, selector, selectOpts)\n      : getFilterFn(selector);\n\n  domEach(this, (elem: AnyNode | null) => {\n    if (elem && !isDocument(elem) && !isTag(elem)) {\n      elem = elem.parent;\n    }\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n\n  return this._make(set);\n}\n\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher((elem) => nextElementSibling(elem));\n\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher((elem) => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  (el) => nextElementSibling(el),\n  _removeDuplicates,\n);\n\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher((elem) => prevElementSibling(elem));\n\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher((elem) => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  (el) => prevElementSibling(el),\n  _removeDuplicates,\n);\n\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) =>\n    getSiblings(elem).filter((el): el is Element => isTag(el) && el !== elem),\n  uniqueSort,\n);\n\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) => getChildren(elem).filter(isTag),\n  _removeDuplicates,\n);\n\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents<T extends AnyNode>(\n  this: Cheerio<T>,\n): Cheerio<AnyNode> {\n  const elems = this.toArray().reduce<AnyNode[]>(\n    (newElems, elem) =>\n      hasChildren(elem) ? newElems.concat(elem.children) : newElems,\n    [],\n  );\n  return this._make(elems);\n}\n\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each<T>(\n  this: Cheerio<T>,\n  fn: (this: T, i: number, el: T) => void | boolean,\n): Cheerio<T> {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n}\n\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map<T, M>(\n  this: Cheerio<T>,\n  fn: (this: T, i: number, el: T) => M[] | M | null | undefined,\n): Cheerio<M> {\n  let elems: M[] = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n}\n\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn<T>(\n  match: FilterFunction<T> | Cheerio<T> | T,\n): (el: T, i: number) => boolean {\n  if (typeof match === 'function') {\n    return (el, i) => (match as FilterFunction<T>).call(el, i, el);\n  }\n  if (isCheerio<T>(match)) {\n    return (el) => Array.prototype.includes.call(match, el);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\n\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test.\n *\n * This is the definition for using type guards; have a look below for other\n * ways to invoke this method. The function is executed in the context of the\n * selected element, so `this` refers to the current element.\n *\n * @category Traversing\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nexport function filter<T, S extends T>(\n  this: Cheerio<T>,\n  match: (this: T, index: number, value: T) => value is S,\n): Cheerio<S>;\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test.\n *\n * - When a Cheerio selection is specified, return only the elements contained in\n *   that selection.\n * - When an element is specified, return only that element (if it is contained in\n *   the original selection).\n * - If using the function method, the function is executed in the context of the\n *   selected element, so `this` refers to the current element.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').filter('.orange').attr('class');\n * //=> orange\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above. See\n *   {@link AcceptedFilters}.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nexport function filter<T, S extends AcceptedFilters<T>>(\n  this: Cheerio<T>,\n  match: S,\n): Cheerio<S extends string ? Element : T>;\nexport function filter<T>(\n  this: Cheerio<T>,\n  match: AcceptedFilters<T>,\n): Cheerio<unknown> {\n  return this._make<unknown>(\n    filterArray(this.toArray(), match, this.options.xmlMode, this._root?.[0]),\n  );\n}\n\nexport function filterArray<T>(\n  nodes: T[],\n  match: AcceptedFilters<T>,\n  xmlMode?: boolean,\n  root?: Document,\n): Element[] | T[] {\n  return typeof match === 'string'\n    ? select.filter(match, nodes as unknown as AnyNode[], { xmlMode, root })\n    : nodes.filter(getFilterFn<T>(match));\n}\n\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is<T>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<T>,\n): boolean {\n  const nodes = this.toArray();\n  return typeof selector === 'string'\n    ? select.some(\n        (nodes as unknown as AnyNode[]).filter(isTag),\n        selector,\n        this.options,\n      )\n    : selector\n      ? nodes.some(getFilterFn<T>(selector))\n      : false;\n}\n\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not<T extends AnyNode>(\n  this: Cheerio<T>,\n  match: AcceptedFilters<T>,\n): Cheerio<T> {\n  let nodes = this.toArray();\n\n  if (typeof match === 'string') {\n    const matches = new Set<AnyNode>(select.filter(match, nodes, this.options));\n    nodes = nodes.filter((el) => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n\n  return this._make(nodes);\n}\n\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(\n  this: Cheerio<AnyNode | Element>,\n  selectorOrHaystack: string | Cheerio<Element> | Element,\n): Cheerio<AnyNode | Element> {\n  return this.filter(\n    typeof selectorOrHaystack === 'string'\n      ? // Using the `:has` selector here short-circuits searches.\n        `:has(${selectorOrHaystack})`\n      : (_, el) => this._make(el).find(selectorOrHaystack).length > 0,\n  );\n}\n\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first<T extends AnyNode>(this: Cheerio<T>): Cheerio<T> {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last<T>(this: Cheerio<T>): Cheerio<T> {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq<T>(this: Cheerio<T>, i: number): Cheerio<T> {\n  i = +i;\n\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n\n  if (i < 0) i = this.length + i;\n  return this._make(this[i] ?? []);\n}\n\n/**\n * Retrieve one of the elements matched by the Cheerio object, at the `i`th\n * position.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').get(0).tagName;\n * //=> li\n * ```\n *\n * @param i - Element to retrieve.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/get/}\n */\nexport function get<T>(this: Cheerio<T>, i: number): T | undefined;\n/**\n * Retrieve all elements matched by the Cheerio object, as an array.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').get().length;\n * //=> 3\n * ```\n *\n * @returns All elements matched by the Cheerio object.\n * @see {@link https://api.jquery.com/get/}\n */\nexport function get<T>(this: Cheerio<T>): T[];\nexport function get<T>(this: Cheerio<T>, i?: number): T | T[] {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\n\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray<T>(this: Cheerio<T>): T[] {\n  return Array.prototype.slice.call(this);\n}\n\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index<T extends AnyNode>(\n  this: Cheerio<T>,\n  selectorOrNeedle?: string | Cheerio<AnyNode> | AnyNode,\n): number {\n  let $haystack: Cheerio<AnyNode>;\n  let needle: AnyNode;\n\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make<AnyNode>(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle)\n      ? selectorOrNeedle[0]\n      : selectorOrNeedle;\n  }\n\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice<T>(\n  this: Cheerio<T>,\n  start?: number,\n  end?: number,\n): Cheerio<T> {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end<T>(this: Cheerio<T>): Cheerio<AnyNode> {\n  return this.prevObject ?? this._make([]);\n}\n\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add<S extends AnyNode, T extends AnyNode>(\n  this: Cheerio<T>,\n  other: string | Cheerio<S> | S | S[],\n  context?: Cheerio<S> | string,\n): Cheerio<S | T> {\n  const selection = this._make(other, context);\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: string,\n): Cheerio<AnyNode> {\n  return this.prevObject\n    ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n    : this;\n}\n","/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\n\nimport {\n  isTag,\n  Text,\n  hasChildren,\n  cloneNode,\n  Document,\n  type ParentNode,\n  type AnyNode,\n  type Element,\n} from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\nimport type { Cheerio } from '../cheerio.js';\nimport type { BasicAcceptedElems, AcceptedElems } from '../types.js';\n\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if\n * necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray<T extends AnyNode>(\n  this: Cheerio<T>,\n  elem?: BasicAcceptedElems<AnyNode> | BasicAcceptedElems<AnyNode>[],\n  clone?: boolean,\n): AnyNode[] {\n  if (elem == null) {\n    return [];\n  }\n\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children.slice(0);\n  }\n\n  if ('length' in elem) {\n    if (elem.length === 1) {\n      return this._makeDomArray(elem[0], clone);\n    }\n\n    const result: AnyNode[] = [];\n\n    for (let i = 0; i < elem.length; i++) {\n      const el = elem[i];\n\n      if (typeof el === 'object') {\n        if (el == null) {\n          continue;\n        }\n\n        if (!('length' in el)) {\n          result.push(clone ? cloneNode(el, true) : el);\n          continue;\n        }\n      }\n\n      result.push(...this._makeDomArray(el, clone));\n    }\n\n    return result;\n  }\n\n  return [clone ? cloneNode(elem, true) : elem];\n}\n\nfunction _insert(\n  concatenator: (\n    dom: AnyNode[],\n    children: AnyNode[],\n    parent: ParentNode,\n  ) => void,\n) {\n  return function <T extends AnyNode>(\n    this: Cheerio<T>,\n    ...elems:\n      | [\n          (\n            this: AnyNode,\n            i: number,\n            html: string,\n          ) => BasicAcceptedElems<AnyNode>,\n        ]\n      | BasicAcceptedElems<AnyNode>[]\n  ) {\n    const lastIdx = this.length - 1;\n\n    return domEach(this, (el, i) => {\n      if (!hasChildren(el)) return;\n\n      const domSrc =\n        typeof elems[0] === 'function'\n          ? elems[0].call(el, i, this._render(el.children))\n          : (elems as BasicAcceptedElems<AnyNode>[]);\n\n      const dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(\n  array: AnyNode[],\n  spliceIdx: number,\n  spliceCount: number,\n  newElems: AnyNode[],\n  parent: ParentNode,\n): AnyNode[] {\n  const spliceArgs: Parameters<typeof Array.prototype.splice> = [\n    spliceIdx,\n    spliceCount,\n    ...newElems,\n  ];\n  const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  const next =\n    spliceIdx + spliceCount >= array.length\n      ? null\n      : array[spliceIdx + spliceCount];\n\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n  for (let idx = 0; idx < newElems.length; ++idx) {\n    const node = newElems[idx];\n    const oldParent = node.parent;\n\n    if (oldParent) {\n      const oldSiblings: AnyNode[] = oldParent.children;\n      const prevIdx = oldSiblings.indexOf(node);\n\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next ?? null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev ?? null;\n    }\n\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice(...spliceArgs);\n}\n\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo<T extends AnyNode>(\n  this: Cheerio<T>,\n  target: BasicAcceptedElems<AnyNode>,\n): Cheerio<T> {\n  const appendTarget = isCheerio<T>(target) ? target : this._make(target);\n\n  appendTarget.append(this);\n\n  return this;\n}\n\n/**\n * Insert every element in the set of matched elements to the beginning of the\n * target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo<T extends AnyNode>(\n  this: Cheerio<T>,\n  target: BasicAcceptedElems<AnyNode>,\n): Cheerio<T> {\n  const prependTarget = isCheerio<T>(target) ? target : this._make(target);\n\n  prependTarget.prepend(this);\n\n  return this;\n}\n\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append: <T extends AnyNode>(\n  this: Cheerio<T>,\n  ...elems:\n    | [(this: AnyNode, i: number, html: string) => BasicAcceptedElems<AnyNode>]\n    | BasicAcceptedElems<AnyNode>[]\n) => Cheerio<T> = _insert((dom, children, parent) => {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend: <T extends AnyNode>(\n  this: Cheerio<T>,\n  ...elems:\n    | [(this: AnyNode, i: number, html: string) => BasicAcceptedElems<AnyNode>]\n    | BasicAcceptedElems<AnyNode>[]\n) => Cheerio<T> = _insert((dom, children, parent) => {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nfunction _wrap(\n  insert: (\n    el: AnyNode,\n    elInsertLocation: ParentNode,\n    wrapperDom: ParentNode[],\n  ) => void,\n) {\n  return function <T extends AnyNode>(\n    this: Cheerio<T>,\n    wrapper: AcceptedElems<AnyNode>,\n  ) {\n    const lastIdx = this.length - 1;\n    const lastParent = this.parents().last();\n\n    for (let i = 0; i < this.length; i++) {\n      const el = this[i];\n\n      const wrap =\n        typeof wrapper === 'function'\n          ? wrapper.call(el, i, el)\n          : typeof wrapper === 'string' && !isHtml(wrapper)\n            ? lastParent.find(wrapper).clone()\n            : wrapper;\n\n      const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n\n      if (!wrapperDom || !hasChildren(wrapperDom)) continue;\n\n      let elInsertLocation = wrapperDom;\n\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n      let j = 0;\n\n      while (j < elInsertLocation.children.length) {\n        const child = elInsertLocation.children[j];\n        if (isTag(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n\n    return this;\n  };\n}\n\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the\n *   selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap: <T extends AnyNode>(\n  this: Cheerio<T>,\n  wrapper: AcceptedElems<AnyNode>,\n) => Cheerio<T> = _wrap((el, elInsertLocation, wrapperDom) => {\n  const { parent } = el;\n\n  if (!parent) return;\n\n  const siblings: AnyNode[] = parent.children;\n  const index = siblings.indexOf(el);\n\n  updateDOM([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner: <T extends AnyNode>(\n  this: Cheerio<T>,\n  wrapper: AcceptedElems<AnyNode>,\n) => Cheerio<T> = _wrap((el, elInsertLocation, wrapperDom) => {\n  if (!hasChildren(el)) return;\n  updateDOM(el.children, elInsertLocation);\n  updateDOM(wrapperDom, el);\n});\n\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>',\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>',\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be\n *   unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: string,\n): Cheerio<T> {\n  this.parent(selector)\n    .not('body')\n    .each((_, el) => {\n      this._make(el).replaceWith(el.children);\n    });\n  return this;\n}\n\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>',\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>',\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll<T extends AnyNode>(\n  this: Cheerio<T>,\n  wrapper: AcceptedElems<T>,\n): Cheerio<T> {\n  const el = this[0];\n  if (el) {\n    const wrap: Cheerio<AnyNode> = this._make(\n      typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper,\n    ).insertBefore(el);\n\n    // If html is given as wrapper, wrap may contain text elements\n    let elInsertLocation: Element | undefined;\n\n    for (let i = 0; i < wrap.length; i++) {\n      if (wrap[i].type === 'tag') elInsertLocation = wrap[i] as Element;\n    }\n\n    let j = 0;\n\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      const child = elInsertLocation.children[j];\n      if (child.type === 'tag') {\n        elInsertLocation = child as Element;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\n\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after<T extends AnyNode>(\n  this: Cheerio<T>,\n  ...elems:\n    | [(this: AnyNode, i: number, html: string) => BasicAcceptedElems<AnyNode>]\n    | BasicAcceptedElems<AnyNode>[]\n): Cheerio<T> {\n  const lastIdx = this.length - 1;\n\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n\n    const siblings: AnyNode[] = el.parent.children;\n    const index = siblings.indexOf(el);\n\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n\n    const domSrc =\n      typeof elems[0] === 'function'\n        ? elems[0].call(el, i, this._render(el.children))\n        : (elems as BasicAcceptedElems<AnyNode>[]);\n\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, el.parent);\n  });\n}\n\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter<T extends AnyNode>(\n  this: Cheerio<T>,\n  target: BasicAcceptedElems<AnyNode>,\n): Cheerio<T> {\n  if (typeof target === 'string') {\n    target = this._make<AnyNode>(target);\n  }\n\n  this.remove();\n\n  const clones: T[] = [];\n\n  for (const el of this._makeDomArray(target)) {\n    const clonedSelf = this.clone().toArray();\n    const { parent } = el;\n    if (!parent) {\n      continue;\n    }\n\n    const siblings: AnyNode[] = parent.children;\n    const index = siblings.indexOf(el);\n\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) continue;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  }\n\n  return this._make(clones);\n}\n\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before<T extends AnyNode>(\n  this: Cheerio<T>,\n  ...elems:\n    | [(this: AnyNode, i: number, html: string) => BasicAcceptedElems<AnyNode>]\n    | BasicAcceptedElems<AnyNode>[]\n): Cheerio<T> {\n  const lastIdx = this.length - 1;\n\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n\n    const siblings: AnyNode[] = el.parent.children;\n    const index = siblings.indexOf(el);\n\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n\n    const domSrc =\n      typeof elems[0] === 'function'\n        ? elems[0].call(el, i, this._render(el.children))\n        : (elems as BasicAcceptedElems<AnyNode>[]);\n\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, el.parent);\n  });\n}\n\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore<T extends AnyNode>(\n  this: Cheerio<T>,\n  target: BasicAcceptedElems<AnyNode>,\n): Cheerio<T> {\n  const targetArr = this._make<AnyNode>(target);\n\n  this.remove();\n\n  const clones: T[] = [];\n\n  domEach(targetArr, (el) => {\n    const clonedSelf = this.clone().toArray();\n    const { parent } = el;\n    if (!parent) {\n      return;\n    }\n\n    const siblings: AnyNode[] = parent.children;\n    const index = siblings.indexOf(el);\n\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  });\n\n  return this._make(clones);\n}\n\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: string,\n): Cheerio<T> {\n  // Filter if we have selector\n  const elems = selector ? this.filter(selector) : this;\n\n  domEach(elems, (el) => {\n    removeElement(el);\n    el.prev = el.next = el.parent = null;\n  });\n\n  return this;\n}\n\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith<T extends AnyNode>(\n  this: Cheerio<T>,\n  content: AcceptedElems<AnyNode>,\n): Cheerio<T> {\n  return domEach(this, (el, i) => {\n    const { parent } = el;\n    if (!parent) {\n      return;\n    }\n\n    const siblings: AnyNode[] = parent.children;\n    const cont =\n      typeof content === 'function' ? content.call(el, i, el) : content;\n    const dom = this._makeDomArray(cont);\n\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n    updateDOM(dom, null);\n\n    const index = siblings.indexOf(el);\n\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\n\n/**\n * Removes all children from each item in the selection. Text nodes and comment\n * nodes are left as is.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty<T extends AnyNode>(this: Cheerio<T>): Cheerio<T> {\n  return domEach(this, (el) => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n\n    el.children.length = 0;\n  });\n}\n\n/**\n * Gets an HTML content string from the first selected element.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.orange').html();\n * //=> Orange\n *\n * $('#fruits').html('<li class=\"mango\">Mango</li>').html();\n * //=> <li class=\"mango\">Mango</li>\n * ```\n *\n * @returns The HTML content string.\n * @see {@link https://api.jquery.com/html/}\n */\nexport function html<T extends AnyNode>(this: Cheerio<T>): string | null;\n/**\n * Replaces each selected element's content with the specified content.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.orange').html('<li class=\"mango\">Mango</li>').html();\n * //=> <li class=\"mango\">Mango</li>\n * ```\n *\n * @param str - The content to replace selection's contents with.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/html/}\n */\nexport function html<T extends AnyNode>(\n  this: Cheerio<T>,\n  str: string | Cheerio<T>,\n): Cheerio<T>;\nexport function html<T extends AnyNode>(\n  this: Cheerio<T>,\n  str?: string | Cheerio<AnyNode>,\n): Cheerio<T> | string | null {\n  if (str === undefined) {\n    const el = this[0];\n    if (!el || !hasChildren(el)) return null;\n    return this._render(el.children);\n  }\n\n  return domEach(this, (el) => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n\n    const content = isCheerio(str)\n      ? str.toArray()\n      : this._parse(`${str}`, this.options, false, el).children;\n\n    updateDOM(content, el);\n  });\n}\n\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString<T extends AnyNode>(this: Cheerio<T>): string {\n  return this._render(this);\n}\n\n/**\n * Get the combined text contents of each element in the set of matched\n * elements, including their descendants.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.orange').text();\n * //=> Orange\n *\n * $('ul').text();\n * //=>  Apple\n * //    Orange\n * //    Pear\n * ```\n *\n * @returns The text contents of the collection.\n * @see {@link https://api.jquery.com/text/}\n */\nexport function text<T extends AnyNode>(this: Cheerio<T>): string;\n/**\n * Set the content of each element in the set of matched elements to the\n * specified text.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.orange').text('Orange');\n * //=> <div class=\"orange\">Orange</div>\n * ```\n *\n * @param str - The text to set as the content of each matched element.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/text/}\n */\nexport function text<T extends AnyNode>(\n  this: Cheerio<T>,\n  str: string | ((this: AnyNode, i: number, text: string) => string),\n): Cheerio<T>;\nexport function text<T extends AnyNode>(\n  this: Cheerio<T>,\n  str?: string | ((this: AnyNode, i: number, text: string) => string),\n): Cheerio<T> | string {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return staticText(this);\n  }\n  if (typeof str === 'function') {\n    // Function support\n    return domEach(this, (el, i) =>\n      this._make(el).text(str.call(el, i, staticText([el]))),\n    );\n  }\n\n  // Append text node to each selected elements\n  return domEach(this, (el) => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n\n    const textNode = new Text(`${str}`);\n\n    updateDOM(textNode, el);\n  });\n}\n\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone<T extends AnyNode>(this: Cheerio<T>): Cheerio<T> {\n  const clone = Array.prototype.map.call(this.get(), (el) =>\n    cloneNode(el, true),\n  ) as T[];\n\n  // Add a root node around the cloned nodes\n  const root = new Document(clone);\n  for (const node of clone) {\n    node.parent = root;\n  }\n\n  return this._make(clone);\n}\n","import { removeElement } from 'domutils';\nimport {\n  type AnyNode,\n  Document,\n  type ParentNode,\n  isDocument as checkIsDocument,\n} from 'domhandler';\nimport type { InternalOptions } from './options.js';\n\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(\n  parser: (\n    content: string,\n    options: InternalOptions,\n    isDocument: boolean,\n    context: ParentNode | null,\n  ) => Document,\n) {\n  /**\n   * Parse a HTML string or a node.\n   *\n   * @param content - The HTML string or node.\n   * @param options - The parser options.\n   * @param isDocument - If `content` is a document.\n   * @param context - The context node in the DOM tree.\n   * @returns The parsed document node.\n   */\n  return function parse(\n    content: string | Document | AnyNode | AnyNode[] | Buffer,\n    options: InternalOptions,\n    isDocument: boolean,\n    context: ParentNode | null,\n  ): Document {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n      content = content.toString();\n    }\n\n    if (typeof content === 'string') {\n      return parser(content, options, isDocument, context);\n    }\n\n    const doc = content as AnyNode | AnyNode[] | Document;\n\n    if (!Array.isArray(doc) && checkIsDocument(doc)) {\n      // If `doc` is already a root, just return it\n      return doc;\n    }\n\n    // Add conent to new root element\n    const root = new Document([]);\n\n    // Update the DOM using the root\n    update(doc, root);\n\n    return root;\n  };\n}\n\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(\n  newChilds: AnyNode[] | AnyNode,\n  parent: ParentNode | null,\n): ParentNode | null {\n  // Normalize\n  const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n\n  // Update parent\n  if (parent) {\n    parent.children = arr;\n  } else {\n    parent = null;\n  }\n\n  // Update neighbors\n  for (let i = 0; i < arr.length; i++) {\n    const node = arr[i];\n\n    // Cleanly remove existing nodes from their previous structures.\n    if (node.parent && node.parent.children !== arr) {\n      removeElement(node);\n    }\n\n    if (parent) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n\n    node.parent = parent;\n  }\n\n  return parent;\n}\n","import { domEach } from '../utils.js';\nimport { isTag, type Element, type AnyNode } from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\n\n/**\n * Get the value of a style property for the first element in the set of matched\n * elements.\n *\n * @category CSS\n * @param names - Optionally the names of the properties of interest.\n * @returns A map of all of the style properties.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css<T extends AnyNode>(\n  this: Cheerio<T>,\n  names?: string[],\n): Record<string, string> | undefined;\n/**\n * Get the value of a style property for the first element in the set of matched\n * elements.\n *\n * @category CSS\n * @param name - The name of the property.\n * @returns The property value for the given name.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css<T extends AnyNode>(\n  this: Cheerio<T>,\n  name: string,\n): string | undefined;\n/**\n * Set one CSS property for every matched element.\n *\n * @category CSS\n * @param prop - The name of the property.\n * @param val - The new value.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css<T extends AnyNode>(\n  this: Cheerio<T>,\n  prop: string,\n  val:\n    | string\n    | ((this: Element, i: number, style: string) => string | undefined),\n): Cheerio<T>;\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param map - A map of property names and values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css<T extends AnyNode>(\n  this: Cheerio<T>,\n  map: Record<string, string>,\n): Cheerio<T>;\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css<T extends AnyNode>(\n  this: Cheerio<T>,\n  prop?: string | string[] | Record<string, string>,\n  val?:\n    | string\n    | ((this: Element, i: number, style: string) => string | undefined),\n): Cheerio<T> | Record<string, string> | string | undefined {\n  if (\n    (prop != null && val != null) ||\n    // When `prop` is a \"plain\" object\n    (typeof prop === 'object' && !Array.isArray(prop))\n  ) {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        // `prop` can't be an array here anymore.\n        setCss(el, prop as string, val, i);\n      }\n    });\n  }\n\n  if (this.length === 0) {\n    return undefined;\n  }\n\n  return getCss(this[0], prop as string);\n}\n\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(\n  el: Element,\n  prop: string | Record<string, string>,\n  value:\n    | string\n    | ((this: Element, i: number, style: string) => string | undefined)\n    | undefined,\n  idx: number,\n) {\n  if (typeof prop === 'string') {\n    const styles = getCss(el);\n\n    const val =\n      typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n\n    if (val === '') {\n      delete styles[prop];\n    } else if (val != null) {\n      styles[prop] = val;\n    }\n\n    el.attribs['style'] = stringify(styles);\n  } else if (typeof prop === 'object') {\n    const keys = Object.keys(prop);\n    for (let i = 0; i < keys.length; i++) {\n      const k = keys[i];\n      setCss(el, k, prop[k], i);\n    }\n  }\n}\n\n/**\n * Get the parsed styles of the first element.\n *\n * @private\n * @category CSS\n * @param el - Element to get styles from.\n * @param props - Optionally the names of the properties of interest.\n * @returns The parsed styles.\n */\nfunction getCss(el: AnyNode, props?: string[]): Record<string, string>;\n/**\n * Get a property from the parsed styles of the first element.\n *\n * @private\n * @category CSS\n * @param el - Element to get styles from.\n * @param prop - Name of the prop.\n * @returns The value of the property.\n */\nfunction getCss(el: AnyNode, prop: string): string | undefined;\nfunction getCss(\n  el: AnyNode,\n  prop?: string | string[],\n): Record<string, string> | string | undefined {\n  if (!el || !isTag(el)) return;\n\n  const styles = parse(el.attribs['style']);\n  if (typeof prop === 'string') {\n    return styles[prop];\n  }\n  if (Array.isArray(prop)) {\n    const newStyles: Record<string, string> = {};\n    for (const item of prop) {\n      if (styles[item] != null) {\n        newStyles[item] = styles[item];\n      }\n    }\n    return newStyles;\n  }\n  return styles;\n}\n\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj: Record<string, string>): string {\n  return Object.keys(obj).reduce(\n    (str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`,\n    '',\n  );\n}\n\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles: string): Record<string, string> {\n  styles = (styles || '').trim();\n\n  if (!styles) return {};\n\n  const obj: Record<string, string> = {};\n\n  let key: string | undefined;\n\n  for (const str of styles.split(';')) {\n    const n = str.indexOf(':');\n    // If there is no :, or if it is the first/last character, add to the previous item's value\n    if (n < 1 || n === str.length - 1) {\n      const trimmed = str.trimEnd();\n      if (trimmed.length > 0 && key !== undefined) {\n        obj[key] += `;${trimmed}`;\n      }\n    } else {\n      key = str.slice(0, n).trim();\n      obj[key] = str.slice(n + 1).trim();\n    }\n  }\n\n  return obj;\n}\n","import { isTag, type AnyNode } from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\n\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize<T extends AnyNode>(this: Cheerio<T>): string {\n  // Convert form elements into name/value objects\n  const arr = this.serializeArray();\n\n  // Serialize each element into a key/value string\n  const retArr = arr.map(\n    (data) =>\n      `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`,\n  );\n\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n}\n\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray<T extends AnyNode>(\n  this: Cheerio<T>,\n): {\n  name: string;\n  value: string;\n}[] {\n  // Resolve all form elements from either forms or collections of form elements\n  return this.map((_, elem) => {\n    const $elem = this._make(elem);\n    if (isTag(elem) && elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    }\n    return $elem.filter(submittableSelector).toArray();\n  })\n    .filter(\n      // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n      '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))',\n      // Convert each of the elements to its value(s)\n    )\n    .map<\n      AnyNode,\n      {\n        name: string;\n        value: string;\n      }\n    >((_, elem) => {\n      const $elem = this._make(elem);\n      const name = $elem.attr('name') as string; // We have filtered for elements with a name before.\n      // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n      const value = $elem.val() ?? '';\n\n      // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n      if (Array.isArray(value)) {\n        return value.map((val) =>\n          /*\n           * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n           * These can occur inside of `<textarea>'s`\n           */\n          ({ name, value: val.replace(rCRLF, '\\r\\n') }),\n        );\n      }\n      // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n      return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n    .toArray();\n}\n","import type { AnyNode, Element } from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\nimport type { prop } from './attributes.js';\n\ntype ExtractDescriptorFn = (\n  el: Element,\n  key: string,\n  // TODO: This could be typed with ExtractedMap\n  obj: Record<string, unknown>,\n) => unknown;\n\ninterface ExtractDescriptor {\n  selector: string;\n  value?: string | ExtractDescriptorFn | ExtractMap;\n}\n\ntype ExtractValue = string | ExtractDescriptor | [string | ExtractDescriptor];\n\nexport interface ExtractMap {\n  [key: string]: ExtractValue;\n}\n\ntype ExtractedValue<V extends ExtractValue, M extends ExtractMap> = V extends [\n  string | ExtractDescriptor,\n]\n  ? NonNullable<ExtractedValue<V[0], M>>[]\n  : V extends string\n    ? string | undefined\n    : V extends ExtractDescriptor\n      ? V['value'] extends ExtractMap\n        ? ExtractedMap<V['value']> | undefined\n        : V['value'] extends ExtractDescriptorFn\n          ? ReturnType<V['value']> | undefined\n          : ReturnType<typeof prop> | undefined\n      : never;\n\nexport type ExtractedMap<M extends ExtractMap> = {\n  [key in keyof M]: ExtractedValue<M[key], M>;\n};\n\nfunction getExtractDescr(\n  descr: string | ExtractDescriptor,\n): Required<ExtractDescriptor> {\n  if (typeof descr === 'string') {\n    return { selector: descr, value: 'textContent' };\n  }\n\n  return {\n    selector: descr.selector,\n    value: descr.value ?? 'textContent',\n  };\n}\n\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract<M extends ExtractMap, T extends AnyNode>(\n  this: Cheerio<T>,\n  map: M,\n): ExtractedMap<M> {\n  const ret: Record<string, unknown> = {};\n\n  for (const key in map) {\n    const descr = map[key];\n    const isArray = Array.isArray(descr);\n\n    const { selector, value } = getExtractDescr(isArray ? descr[0] : descr);\n\n    const fn: ExtractDescriptorFn =\n      typeof value === 'function'\n        ? value\n        : typeof value === 'string'\n          ? (el: Element) => this._make(el).prop(value)\n          : (el: Element) => this._make(el).extract(value);\n\n    if (isArray) {\n      ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY)\n        .map((_, el) => fn(el, key, ret))\n        .get();\n    } else {\n      const $ = this._findBySelector(selector, 1);\n      ret[key] = $.length > 0 ? fn($[0], key, ret) : undefined;\n    }\n  }\n\n  return ret as ExtractedMap<M>;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nimport type { InternalOptions } from './options.js';\nimport type { AnyNode, Document, ParentNode } from 'domhandler';\nimport type { BasicAcceptedElems } from './types.js';\n\nimport * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nimport * as Extract from './api/extract.js';\n\ntype MethodsType = typeof Attributes &\n  typeof Traversing &\n  typeof Manipulation &\n  typeof Css &\n  typeof Forms &\n  typeof Extract;\n\n/**\n * The cheerio class is the central class of the library. It wraps a set of\n * elements and provides an API for traversing, modifying, and interacting with\n * the set.\n *\n * Loading a document will return the Cheerio class bound to the root element of\n * the document. The class will be instantiated when querying the document (when\n * calling `$('selector')`).\n *\n * @example This is the HTML markup we will be using in all of the API examples:\n *\n * ```html\n * <ul id=\"fruits\">\n *   <li class=\"apple\">Apple</li>\n *   <li class=\"orange\">Orange</li>\n *   <li class=\"pear\">Pear</li>\n * </ul>\n * ```\n */\nexport abstract class Cheerio<T> implements ArrayLike<T> {\n  length = 0;\n  [index: number]: T;\n\n  options: InternalOptions;\n  /**\n   * The root of the document. Can be set by using the `root` argument of the\n   * constructor.\n   *\n   * @private\n   */\n  _root: Cheerio<Document> | null;\n\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use `$.load` instead.\n   *\n   * @private\n   * @param elements - The new selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  constructor(\n    elements: ArrayLike<T> | undefined,\n    root: Cheerio<Document> | null,\n    options: InternalOptions,\n  ) {\n    this.options = options;\n    this._root = root;\n\n    if (elements) {\n      for (let idx = 0; idx < elements.length; idx++) {\n        this[idx] = elements[idx];\n      }\n      this.length = elements.length;\n    }\n  }\n\n  prevObject: Cheerio<any> | undefined;\n  /**\n   * Make a cheerio object.\n   *\n   * @private\n   * @param dom - The contents of the new object.\n   * @param context - The context of the new object.\n   * @returns The new cheerio object.\n   */\n  abstract _make<T>(\n    dom: ArrayLike<T> | T | string,\n    context?: BasicAcceptedElems<AnyNode>,\n  ): Cheerio<T>;\n\n  /**\n   * Parses some content.\n   *\n   * @private\n   * @param content - Content to parse.\n   * @param options - Options for parsing.\n   * @param isDocument - Allows parser to be switched to fragment mode.\n   * @returns A document containing the `content`.\n   */\n  abstract _parse(\n    content: string | Document | AnyNode | AnyNode[] | Buffer,\n    options: InternalOptions,\n    isDocument: boolean,\n    context: ParentNode | null,\n  ): Document;\n\n  /**\n   * Render an element or a set of elements.\n   *\n   * @private\n   * @param dom - DOM to render.\n   * @returns The rendered DOM.\n   */\n  abstract _render(dom: AnyNode | ArrayLike<AnyNode>): string;\n}\n\nexport interface Cheerio<T> extends MethodsType, Iterable<T> {\n  cheerio: '[cheerio object]';\n\n  splice: typeof Array.prototype.splice;\n}\n\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n\n// Plug in the API\nObject.assign(\n  Cheerio.prototype,\n  Attributes,\n  Traversing,\n  Manipulation,\n  Css,\n  Forms,\n  Extract,\n);\n","import {\n  type CheerioOptions,\n  type InternalOptions,\n  flattenOptions,\n} from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nimport type { AnyNode, Document, Element, ParentNode } from 'domhandler';\nimport type { SelectorType, BasicAcceptedElems } from './types.js';\n\ntype StaticType = typeof staticMethods;\n\n/**\n * A querying function, bound to a document created from the provided markup.\n *\n * Also provides several helper methods for dealing with the document as a\n * whole.\n */\nexport interface CheerioAPI extends StaticType {\n  /**\n   * This selector method is the starting point for traversing and manipulating\n   * the document. Like jQuery, it's the primary method for selecting elements\n   * in the document.\n   *\n   * `selector` searches within the `context` scope, which searches within the\n   * `root` scope.\n   *\n   * @example\n   *\n   * ```js\n   * $('ul .pear').attr('class');\n   * //=> pear\n   *\n   * $('li[class=orange]').html();\n   * //=> Orange\n   *\n   * $('.apple', '#fruits').text();\n   * //=> Apple\n   * ```\n   *\n   * Optionally, you can also load HTML by passing the string as the selector:\n   *\n   * ```js\n   * $('<ul id=\"fruits\">...</ul>');\n   * ```\n   *\n   * Or the context:\n   *\n   * ```js\n   * $('ul', '<ul id=\"fruits\">...</ul>');\n   * ```\n   *\n   * Or as the root:\n   *\n   * ```js\n   * $('li', 'ul', '<ul id=\"fruits\">...</ul>');\n   * ```\n   *\n   * @param selector - Either a selector to look for within the document, or the\n   *   contents of a new Cheerio instance.\n   * @param context - Either a selector to look for within the root, or the\n   *   contents of the document to query.\n   * @param root - Optional HTML document string.\n   */\n  <T extends AnyNode, S extends string>(\n    selector?: S | BasicAcceptedElems<T>,\n    context?: BasicAcceptedElems<AnyNode> | null,\n    root?: BasicAcceptedElems<Document>,\n    options?: CheerioOptions,\n  ): Cheerio<S extends SelectorType ? Element : T>;\n\n  /**\n   * The root the document was originally loaded with.\n   *\n   * @private\n   */\n  _root: Document;\n\n  /**\n   * The options the document was originally loaded with.\n   *\n   * @private\n   */\n  _options: InternalOptions;\n\n  /** Mimic jQuery's prototype alias for plugin authors. */\n  fn: typeof Cheerio.prototype;\n\n  /**\n   * The `.load` static method defined on the \"loaded\" Cheerio factory function\n   * is deprecated. Users are encouraged to instead use the `load` function\n   * exported by the Cheerio module.\n   *\n   * @deprecated Use the `load` function exported by the Cheerio module.\n   * @category Deprecated\n   * @example\n   *\n   * ```js\n   * const $ = cheerio.load('<h1>Hello, <span>world</span>.</h1>');\n   * ```\n   */\n  load: ReturnType<typeof getLoad>;\n}\n\nexport function getLoad(\n  parse: typeof Cheerio.prototype._parse,\n  render: (\n    dom: AnyNode | ArrayLike<AnyNode>,\n    options: InternalOptions,\n  ) => string,\n) {\n  /**\n   * Create a querying function, bound to a document created from the provided\n   * markup.\n   *\n   * Note that similar to web browser contexts, this operation may introduce\n   * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n   * switch to fragment mode and disable this.\n   *\n   * @param content - Markup to be loaded.\n   * @param options - Options for the created instance.\n   * @param isDocument - Allows parser to be switched to fragment mode.\n   * @returns The loaded document.\n   * @see {@link https://cheerio.js.org#loading} for additional usage information.\n   */\n  return function load(\n    content: string | AnyNode | AnyNode[] | Buffer,\n    options?: CheerioOptions | null,\n    isDocument = true,\n  ): CheerioAPI {\n    if ((content as string | null) == null) {\n      throw new Error('cheerio.load() expects a string');\n    }\n\n    const internalOpts = flattenOptions(options);\n    const initialRoot = parse(content, internalOpts, isDocument, null);\n\n    /**\n     * Create an extended class here, so that extensions only live on one\n     * instance.\n     */\n    class LoadedCheerio<T> extends Cheerio<T> {\n      _make<T>(\n        selector?: ArrayLike<T> | T | string,\n        context?: BasicAcceptedElems<AnyNode> | null,\n      ): Cheerio<T> {\n        const cheerio = initialize(selector, context);\n        cheerio.prevObject = this;\n\n        return cheerio;\n      }\n\n      _parse(\n        content: string | Document | AnyNode | AnyNode[] | Buffer,\n        options: InternalOptions,\n        isDocument: boolean,\n        context: ParentNode | null,\n      ) {\n        return parse(content, options, isDocument, context);\n      }\n\n      _render(dom: AnyNode | ArrayLike<AnyNode>): string {\n        return render(dom, this.options);\n      }\n    }\n\n    function initialize<T = AnyNode, S extends string = string>(\n      selector?: ArrayLike<T> | T | S,\n      context?: BasicAcceptedElems<AnyNode> | null,\n      root: BasicAcceptedElems<Document> = initialRoot,\n      opts?: CheerioOptions,\n    ): Cheerio<S extends SelectorType ? Element : T> {\n      type Result = S extends SelectorType ? Element : T;\n\n      // $($)\n      if (selector && isCheerio<Result>(selector)) return selector;\n\n      const options = flattenOptions(opts, internalOpts);\n      const r =\n        typeof root === 'string'\n          ? [parse(root, options, false, null)]\n          : 'length' in root\n            ? root\n            : [root];\n      const rootInstance = isCheerio<Document>(r)\n        ? r\n        : new LoadedCheerio<Document>(r, null, options);\n      // Add a cyclic reference, so that calling methods on `_root` never fails.\n      rootInstance._root = rootInstance;\n\n      // $(), $(null), $(undefined), $(false)\n      if (!selector) {\n        return new LoadedCheerio<Result>(undefined, rootInstance, options);\n      }\n\n      const elements: AnyNode[] | undefined =\n        typeof selector === 'string' && isHtml(selector)\n          ? // $(<html>)\n            parse(selector, options, false, null).children\n          : isNode(selector)\n            ? // $(dom)\n              [selector]\n            : Array.isArray(selector)\n              ? // $([dom])\n                selector\n              : undefined;\n\n      const instance = new LoadedCheerio(elements, rootInstance, options);\n\n      if (elements) {\n        return instance as any;\n      }\n\n      if (typeof selector !== 'string') {\n        throw new TypeError('Unexpected type of selector');\n      }\n\n      // We know that our selector is a string now.\n      let search = selector;\n\n      const searchContext: Cheerio<AnyNode> | undefined = context\n        ? // If we don't have a context, maybe we have a root, from loading\n          typeof context === 'string'\n          ? isHtml(context)\n            ? // $('li', '<ul>...</ul>')\n              new LoadedCheerio<Document>(\n                [parse(context, options, false, null)],\n                rootInstance,\n                options,\n              )\n            : // $('li', 'ul')\n              ((search = `${context} ${search}` as S), rootInstance)\n          : isCheerio<AnyNode>(context)\n            ? // $('li', $)\n              context\n            : // $('li', node), $('li', [nodes])\n              new LoadedCheerio<AnyNode>(\n                Array.isArray(context) ? context : [context],\n                rootInstance,\n                options,\n              )\n        : rootInstance;\n\n      // If we still don't have a context, return\n      if (!searchContext) return instance as any;\n\n      /*\n       * #id, .class, tag\n       */\n      return searchContext.find(search) as Cheerio<Result>;\n    }\n\n    // Add in static methods & properties\n    Object.assign(initialize, staticMethods, {\n      load,\n      // `_root` and `_options` are used in static methods.\n      _root: initialRoot,\n      _options: internalOpts,\n      // Add `fn` for plugins\n      fn: LoadedCheerio.prototype,\n      // Add the prototype here to maintain `instanceof` behavior.\n      prototype: LoadedCheerio.prototype,\n    });\n\n    return initialize as CheerioAPI;\n  };\n}\n\nfunction isNode(obj: any): obj is AnyNode {\n  return (\n    !!obj.name ||\n    obj.type === 'root' ||\n    obj.type === 'text' ||\n    obj.type === 'comment'\n  );\n}\n","import {\n  type AnyNode,\n  type Document,\n  type ParentNode,\n  isDocument,\n} from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\nimport type { InternalOptions } from '../options.js';\n\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(\n  content: string,\n  options: InternalOptions,\n  isDocument: boolean,\n  context: ParentNode | null,\n): Document {\n  options.treeAdapter ??= htmlparser2Adapter;\n\n  if (options.scriptingEnabled !== false) {\n    options.scriptingEnabled = true;\n  }\n\n  return isDocument\n    ? parseDocument(content, options)\n    : parseFragment(context, content, options);\n}\n\nconst renderOpts = { treeAdapter: htmlparser2Adapter };\n\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom: AnyNode | ArrayLike<AnyNode>): string {\n  /*\n   * `dom-serializer` passes over the special \"root\" node and renders the\n   * node's children in its place. To mimic this behavior with `parse5`, an\n   * equivalent operation must be applied to the input array.\n   */\n  const nodes = 'length' in dom ? dom : [dom];\n  for (let index = 0; index < nodes.length; index += 1) {\n    const node = nodes[index];\n    if (isDocument(node)) {\n      Array.prototype.splice.call(nodes, index, 1, ...node.children);\n    }\n  }\n\n  let result = '';\n  for (let index = 0; index < nodes.length; index += 1) {\n    const node = nodes[index];\n    result += serializeOuter(node, renderOpts);\n  }\n\n  return result;\n}\n","import { type CheerioAPI, getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport type { CheerioOptions } from './options.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nimport type { AnyNode } from 'domhandler';\n\nconst parse = getParse((content, options, isDocument, context) =>\n  options._useHtmlParser2\n    ? parseWithHtmlparser2(content, options)\n    : parseWithParse5(content, options, isDocument, context),\n);\n\n// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n/**\n * Create a querying function, bound to a document created from the provided\n * markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @category Loading\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load: (\n  content: string | AnyNode | AnyNode[] | Buffer,\n  options?: CheerioOptions | null,\n  isDocument?: boolean,\n) => CheerioAPI = getLoad(parse, (dom, options) =>\n  options._useHtmlParser2\n    ? renderWithHtmlparser2(dom, options)\n    : renderWithParse5(dom),\n);\n","/**\n * @file Batteries-included version of Cheerio. This module includes several\n *   convenience methods for loading documents from various sources.\n */\n\nexport * from './load-parse.js';\nexport { contains, merge } from './static.js';\nexport type * from './types.js';\nexport type {\n  Cheerio,\n  CheerioAPI,\n  CheerioOptions,\n  HTMLParser2Options,\n} from './slim.js';\n\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\nimport * as htmlparser2 from 'htmlparser2';\nimport { ParserStream as Parse5Stream } from 'parse5-parser-stream';\nimport {\n  decodeBuffer,\n  DecodeStream,\n  type SnifferOptions,\n} from 'encoding-sniffer';\nimport * as undici from 'undici';\nimport MIMEType from 'whatwg-mimetype';\nimport { Writable, finished } from 'node:stream';\nimport type { CheerioAPI } from './load.js';\nimport {\n  flattenOptions,\n  type InternalOptions,\n  type CheerioOptions,\n} from './options.js';\nimport { load } from './load-parse.js';\n\n/**\n * Sniffs the encoding of a buffer, then creates a querying function bound to a\n * document created from the buffer.\n *\n * @category Loading\n * @example\n *\n * ```js\n * import * as cheerio from 'cheerio';\n *\n * const buffer = fs.readFileSync('index.html');\n * const $ = cheerio.fromBuffer(buffer);\n * ```\n *\n * @param buffer - The buffer to sniff the encoding of.\n * @param options - The options to pass to Cheerio.\n * @returns The loaded document.\n */\nexport function loadBuffer(\n  buffer: Buffer,\n  options: DecodeStreamOptions = {},\n): CheerioAPI {\n  const opts = flattenOptions(options);\n  const str = decodeBuffer(buffer, {\n    defaultEncoding: opts?.xmlMode ? 'utf8' : 'windows-1252',\n    ...options.encoding,\n  });\n\n  return load(str, opts);\n}\n\nfunction _stringStream(\n  options: InternalOptions | undefined,\n  cb: (err: Error | null | undefined, $: CheerioAPI) => void,\n): Writable {\n  if (options?._useHtmlParser2) {\n    const parser = htmlparser2.createDocumentStream(\n      (err, document) => cb(err, load(document)),\n      options,\n    );\n\n    return new Writable({\n      decodeStrings: false,\n      write(chunk, _encoding, callback) {\n        if (typeof chunk !== 'string') {\n          throw new TypeError('Expected a string');\n        }\n\n        parser.write(chunk);\n        callback();\n      },\n      final(callback) {\n        parser.end();\n        callback();\n      },\n    });\n  }\n\n  options ??= {};\n  options.treeAdapter ??= htmlparser2Adapter;\n\n  if (options.scriptingEnabled !== false) {\n    options.scriptingEnabled = true;\n  }\n\n  const stream = new Parse5Stream(options);\n\n  finished(stream, (err) => cb(err, load(stream.document)));\n\n  return stream;\n}\n\n/**\n * Creates a stream that parses a sequence of strings into a document.\n *\n * The stream is a `Writable` stream that accepts strings. When the stream is\n * finished, the callback is called with the loaded document.\n *\n * @category Loading\n * @example\n *\n * ```js\n * import * as cheerio from 'cheerio';\n * import * as fs from 'fs';\n *\n * const writeStream = cheerio.stringStream({}, (err, $) => {\n *   if (err) {\n *     // Handle error\n *   }\n *\n *   console.log($('h1').text());\n *   // Output: Hello, world!\n * });\n *\n * fs.createReadStream('my-document.html', { encoding: 'utf8' }).pipe(\n *   writeStream,\n * );\n * ```\n *\n * @param options - The options to pass to Cheerio.\n * @param cb - The callback to call when the stream is finished.\n * @returns The writable stream.\n */\nexport function stringStream(\n  options: CheerioOptions,\n  cb: (err: Error | null | undefined, $: CheerioAPI) => void,\n): Writable {\n  return _stringStream(flattenOptions(options), cb);\n}\n\nexport interface DecodeStreamOptions extends CheerioOptions {\n  encoding?: SnifferOptions;\n}\n\n/**\n * Parses a stream of buffers into a document.\n *\n * The stream is a `Writable` stream that accepts buffers. When the stream is\n * finished, the callback is called with the loaded document.\n *\n * @category Loading\n * @param options - The options to pass to Cheerio.\n * @param cb - The callback to call when the stream is finished.\n * @returns The writable stream.\n */\nexport function decodeStream(\n  options: DecodeStreamOptions,\n  cb: (err: Error | null | undefined, $: CheerioAPI) => void,\n): Writable {\n  const { encoding = {}, ...cheerioOptions } = options;\n  const opts = flattenOptions(cheerioOptions);\n\n  // Set the default encoding to UTF-8 for XML mode\n  encoding.defaultEncoding ??= opts?.xmlMode ? 'utf8' : 'windows-1252';\n\n  const decodeStream = new DecodeStream(encoding);\n  const loadStream = _stringStream(opts, cb);\n\n  decodeStream.pipe(loadStream);\n\n  return decodeStream;\n}\n\ntype UndiciStreamOptions = Parameters<typeof undici.stream>[1];\n\nexport interface CheerioRequestOptions extends DecodeStreamOptions {\n  /** The options passed to `undici`'s `stream` method. */\n  requestOptions?: UndiciStreamOptions;\n}\n\nconst defaultRequestOptions: UndiciStreamOptions = {\n  method: 'GET',\n  // Allow redirects by default\n  maxRedirections: 5,\n  // NOTE: `throwOnError` currently doesn't work https://github.com/nodejs/undici/issues/1753\n  throwOnError: true,\n  // Set an Accept header\n  headers: {\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n  },\n};\n\n/**\n * `fromURL` loads a document from a URL.\n *\n * By default, redirects are allowed and non-2xx responses are rejected.\n *\n * @category Loading\n * @example\n *\n * ```js\n * import * as cheerio from 'cheerio';\n *\n * const $ = await cheerio.fromURL('https://example.com');\n * ```\n *\n * @param url - The URL to load the document from.\n * @param options - The options to pass to Cheerio.\n * @returns The loaded document.\n */\nexport async function fromURL(\n  url: string | URL,\n  options: CheerioRequestOptions = {},\n): Promise<CheerioAPI> {\n  const {\n    requestOptions = defaultRequestOptions,\n    encoding = {},\n    ...cheerioOptions\n  } = options;\n  let undiciStream: Promise<undici.Dispatcher.StreamData> | undefined;\n\n  // Add headers if none were supplied.\n  requestOptions.headers ??= defaultRequestOptions.headers;\n\n  const promise = new Promise<CheerioAPI>((resolve, reject) => {\n    undiciStream = undici.stream(url, requestOptions, (res) => {\n      const contentType = res.headers['content-type'] ?? 'text/html';\n      const mimeType = new MIMEType(\n        Array.isArray(contentType) ? contentType[0] : contentType,\n      );\n\n      if (!mimeType.isHTML() && !mimeType.isXML()) {\n        throw new RangeError(\n          `The content-type \"${contentType}\" is neither HTML nor XML.`,\n        );\n      }\n\n      // Forward the charset from the header to the decodeStream.\n      encoding.transportLayerEncodingLabel = mimeType.parameters.get('charset');\n\n      /*\n       * If we allow redirects, we will have entries in the history.\n       * The last entry will be the final URL.\n       */\n      const history = (\n        res.context as\n          | {\n              history?: URL[];\n            }\n          | undefined\n      )?.history;\n\n      const opts = {\n        encoding,\n        // Set XML mode based on the MIME type.\n        xmlMode: mimeType.isXML(),\n        // Set the `baseURL` to the final URL.\n        baseURL: history ? history[history.length - 1] : url,\n        ...cheerioOptions,\n      };\n\n      return decodeStream(opts, (err, $) => (err ? reject(err) : resolve($)));\n    });\n  });\n\n  // Let's make sure the request is completed before returning the promise.\n  await undiciStream;\n\n  return promise;\n}\n"],"mappings":"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","names":["url","path","spawnSync","defaultOpts","flattenOptions","options","baseOptions","opts","static_exports","__export","contains","extract","html","merge","parseHTML","root","text","xml","textContent","render","that","dom","options","isOptions","html","toRender","opts","flattenOptions","xml","text","elements","elems","ret","i","textContent","parseHTML","data","context","keepScripts","parsed","root","contains","container","contained","next","extract","map","merge","arr1","arr2","isArrayLike","newLength","len","item","attributes_exports","__export","addClass","attr","data","hasClass","prop","removeAttr","removeClass","toggleClass","val","isCheerio","maybeCheerio","camelCase","str","_","x","cssCase","domEach","array","fn","len","i","CharacterCodes","isHtml","tagStart","tagChar","isTag","innerText","textContent","hasOwn","rspace","dataAttrPrefix","rboolean","rbrace","getAttr","elem","name","xmlMode","_a","text","setAttr","el","value","removeAttribute","attr","domEach","i","objName","objValue","getProp","setProp","prop","property","keys","key","val","setData","readAllData","domName","jsName","camelCase","parseDataValue","readData","cssCase","data","num","dataEl","querying","element","option","values","splitNames","names","removeAttr","attrNames","attrName","hasClass","className","clazz","idx","end","addClass","classNames","numElements","setClass","cn","appendClass","removeClass","classes","numClasses","removeAll","elClasses","changed","j","index","toggleClass","stateVal","state","elementClasses","traversing_exports","__export","_findBySelector","add","addBack","children","closest","contents","each","end","eq","filter","filterArray","find","first","get","has","index","is","last","map","next","nextAll","nextUntil","not","parent","parents","parentsUntil","prev","prevAll","prevUntil","siblings","slice","toArray","isTag","hasChildren","isDocument","select","getChildren","getSiblings","nextElementSibling","prevElementSibling","uniqueSort","reSiblingSelector","find","selectorOrHaystack","haystack","isCheerio","context","elem","node","contains","_findBySelector","selector","limit","elems","options","_a","_getMatcher","matchMap","fn","postFns","matched","filterArray","_matcher","ret","i","value","_singleMatcher","_matchUntil","nextElem","matches","innerMatcher","domEach","next","filterSelector","getFilterFn","_removeDuplicates","parent","isDocument","parents","parentsUntil","closest","set","selectOpts","selectFn","isTag","nextAll","nextUntil","el","prev","prevAll","prevUntil","siblings","children","contents","newElems","hasChildren","each","len","map","val","match","filter","nodes","xmlMode","root","is","not","filterFn","has","_","first","last","eq","get","toArray","index","selectorOrNeedle","$haystack","needle","slice","start","end","add","other","selection","addBack","manipulation_exports","__export","_makeDomArray","after","append","appendTo","before","clone","empty","html","insertAfter","insertBefore","prepend","prependTo","remove","replaceWith","text","toString","unwrap","wrap","wrapAll","wrapInner","isTag","Text","hasChildren","cloneNode","Document","removeElement","Document","checkIsDocument","getParse","parser","content","options","isDocument","context","doc","root","update","newChilds","parent","arr","i","node","removeElement","_makeDomArray","elem","clone","result","i","el","cloneNode","_insert","concatenator","elems","lastIdx","domEach","hasChildren","domSrc","dom","uniqueSplice","array","spliceIdx","spliceCount","newElems","parent","spliceArgs","prev","next","idx","node","oldParent","prevIdx","_a","_b","appendTo","target","isCheerio","prependTo","append","children","prepend","_wrap","insert","wrapper","lastParent","wrap","isHtml","wrapperDom","elInsertLocation","j","child","isTag","siblings","index","update","wrapInner","unwrap","selector","_","wrapAll","after","insertAfter","clones","clonedSelf","before","insertBefore","targetArr","remove","replaceWith","content","cont","empty","html","str","toString","text","textNode","Text","root","Document","css_exports","__export","css","isTag","css","prop","val","domEach","el","i","setCss","getCss","value","idx","styles","stringify","keys","k","parse","newStyles","item","obj","str","key","n","trimmed","forms_exports","__export","serialize","serializeArray","isTag","submittableSelector","r20","rCRLF","data","_","elem","$elem","name","value","_a","val","extract_exports","__export","extract","getExtractDescr","descr","_a","map","ret","key","isArray","selector","value","fn","el","_","$","Cheerio","elements","root","options","idx","attributes_exports","traversing_exports","manipulation_exports","css_exports","forms_exports","extract_exports","getLoad","parse","render","load","content","options","isDocument","internalOpts","flattenOptions","initialRoot","LoadedCheerio","Cheerio","selector","context","cheerio","initialize","dom","root","opts","isCheerio","r","rootInstance","elements","isHtml","isNode","instance","search","searchContext","static_exports","obj","isDocument","parseDocument","parseFragment","serializeOuter","htmlparser2Adapter","parseWithParse5","content","options","context","_a","renderOpts","renderWithParse5","dom","nodes","index","node","result","renderWithHtmlparser2","parseWithHtmlparser2","parse","getParse","content","options","isDocument","context","parseWithParse5","load","getLoad","dom","renderWithParse5","htmlparser2Adapter","htmlparser2","Parse5Stream","decodeBuffer","DecodeStream","undici","MIMEType","Writable","finished","FILE_NAME","path","url","SEARCH_TERM","BASE_URI","SUB_LANG","SUB_DL_PATH","search","searchUrl","$","res","html","load","results","fzfLines","_i","el","year","title","href","spawnSync","getDlLinks","pageLink","ajaxType","pass","result","r","subs","m3u8Link","subPath","sub","runShell","command","std","sanitizeName","name","startDownload","chosenLink","isSeries","subLink","fileName","zeroPad","n","seriesName","fzfEpList","seasons","season","seasonText","seasonNum","episodes","ep","epNum","epName","selectedEpisodes","commands","epPageLink","commandCurl","commandYTDLP","main","err"]}